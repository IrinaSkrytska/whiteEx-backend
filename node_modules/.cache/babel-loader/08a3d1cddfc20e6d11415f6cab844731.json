{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\whiteEx\\\\src\\\\components\\\\CurrencyConverter\\\\CurrencyConverter.jsx\",\n    _s = $RefreshSig$();\n\nimport css from './CurrencyConverter.module.css';\nimport { useState, useEffect } from 'react';\nimport Block from '../Block';\nimport ConvertFrom from '../ConvertFrom';\nimport ConvertTo from 'components/ConvertTo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CurrencyConverter() {\n  _s();\n\n  const [fromCurrency, setFromCurrency] = useState('bitcoin');\n  const [toCurrency, setToCurrency] = useState('usd');\n  const [fromPrice, setFromPrice] = useState('');\n  const [toPrice, setToPrice] = useState('');\n  const [rates, setRates] = useState();\n  const [comission, setComission] = useState(0);\n  useEffect(() => {\n    setFromPrice('');\n    setToPrice('');\n\n    if (fromCurrency === 'bitcoin' && toCurrency === 'usd') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=BTCUSDT').then(res => res.json().then(json => {\n        setRates(json.price);\n        console.log(json.price);\n      }));\n    }\n\n    if (fromCurrency === 'bitcoin' && toCurrency === 'EUR') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=BTCEUR').then(res => res.json().then(json => {\n        setRates(json.price);\n        console.log(json.price);\n      }));\n    }\n\n    if (fromCurrency === 'bitcoin' && toCurrency === 'pln') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=BTCPLN').then(res => res.json().then(json => {\n        setRates(json.price);\n        console.log(json.price);\n      }));\n    }\n\n    if (fromCurrency === 'usd' && toCurrency === 'bitcoin') {\n      fetch(`https://api.exchangerate.host/convert?from=USD&to=BTC`).then(res => res.json().then(json => {\n        setRates(json.result);\n        console.log(json.result);\n      }));\n    }\n\n    if (fromCurrency === 'EUR' && toCurrency === 'bitcoin') {\n      fetch(`https://api.exchangerate.host/convert?from=${fromCurrency}&to=BTC`).then(res => res.json().then(json => {\n        setRates(json.result);\n        console.log(json.result);\n      }));\n    }\n\n    if (fromCurrency === 'pln' && toCurrency === 'bitcoin') {\n      fetch(`https://api.exchangerate.host/convert?from=PLN&to=BTC`).then(res => res.json().then(json => {\n        setRates(json.result);\n        console.log(json.result);\n      }));\n    }\n\n    if (fromCurrency === 'ethereum' && toCurrency === 'usd') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=ETHUSDT').then(res => res.json().then(json => {\n        setRates(json.price);\n        console.log(json.price);\n      }));\n    }\n\n    if (fromCurrency === 'ethereum' && toCurrency === 'EUR') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=ETHEUR').then(res => res.json().then(json => {\n        setRates(json.price);\n        console.log(json.price);\n      }));\n    }\n\n    if (fromCurrency === 'ethereum' && toCurrency === 'pln') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=ETHPLN').then(res => res.json().then(json => {\n        setRates(json.price);\n        console.log(json.price);\n      }));\n    }\n\n    if (fromCurrency === 'usd' && toCurrency === 'ethereum') {\n      fetch('https://min-api.cryptocompare.com/data/price?fsym=USD&tsyms=ETH').then(res => res.json().then(json => {\n        setRates(json.ETH);\n        console.log(json.ETH);\n      }));\n    }\n\n    if (fromCurrency === 'EUR' && toCurrency === 'ethereum') {\n      fetch('https://min-api.cryptocompare.com/data/price?fsym=EUR&tsyms=ETH').then(res => res.json().then(json => {\n        setRates(json.ETH);\n        console.log(json.ETH);\n      }));\n    }\n\n    if (fromCurrency === 'pln' && toCurrency === 'ethereum') {\n      fetch('https://min-api.cryptocompare.com/data/price?fsym=PLN&tsyms=ETH').then(res => res.json().then(json => {\n        setRates(json.ETH);\n        console.log(json.ETH);\n      }));\n    }\n\n    if (fromCurrency === 'tether' && toCurrency === 'usd') {\n      fetch('https://min-api.cryptocompare.com/data/price?fsym=USDT&tsyms=USD').then(res => res.json().then(json => {\n        setRates(json.USD);\n        console.log(json.USD);\n      }));\n    }\n\n    if (fromCurrency === 'tether' && toCurrency === 'EUR') {\n      fetch('https://min-api.cryptocompare.com/data/price?fsym=USDT&tsyms=EUR').then(res => res.json().then(json => {\n        setRates(json.EUR);\n        console.log(json.EUR);\n      }));\n    }\n\n    if (fromCurrency === 'tether' && toCurrency === 'pln') {\n      fetch('https://min-api.cryptocompare.com/data/price?fsym=USDT&tsyms=PLN').then(res => res.json().then(json => {\n        setRates(json.PLN);\n        console.log(json.PLN);\n      }));\n    }\n\n    if (fromCurrency === 'usd' && toCurrency === 'tether') {\n      fetch('https://min-api.cryptocompare.com/data/price?fsym=USD&tsyms=USDT').then(res => res.json().then(json => {\n        setRates(json.USDT);\n        console.log(json.USDT);\n      }));\n    }\n\n    if (fromCurrency === 'EUR' && toCurrency === 'tether') {\n      fetch('https://min-api.cryptocompare.com/data/price?fsym=EUR&tsyms=USDT').then(res => res.json().then(json => {\n        setRates(json.USDT);\n        console.log(json.USDT);\n      }));\n    }\n\n    if (fromCurrency === 'pln' && toCurrency === 'tether') {\n      fetch('https://min-api.cryptocompare.com/data/price?fsym=PLN&tsyms=USDT').then(res => res.json().then(json => {\n        setRates(json.USDT);\n        console.log(json.USDT);\n      }));\n    }\n\n    if (fromCurrency === 'bitcoin' || fromCurrency === 'ethereum' || fromCurrency === 'tether') {\n      fetch(`https://api.coincap.io/v2/rates/${fromCurrency}`).then(res => res.json().then(json => {\n        setComission(json.data.rateUsd);\n        console.log(json.data.rateUsd);\n      }));\n    }\n\n    if (toCurrency === 'bitcoin') {\n      fetch(`https://api.exchangerate.host/convert?from=${fromCurrency}&to=BTC`).then(res => res.json().then(json => {\n        setComission(json.result);\n        console.log(json.result);\n      }));\n    }\n\n    if (fromCurrency === 'usd' || fromCurrency === 'EUR' || fromCurrency === 'pln' && toCurrency === 'ethereum') {\n      fetch(`https://min-api.cryptocompare.com/data/price?fsym=${fromCurrency}&tsyms=ETH`).then(res => res.json().then(json => {\n        setComission(json.ETH);\n        console.log(json.ETH);\n      }));\n    }\n\n    if (fromCurrency === 'usd' || fromCurrency === 'EUR' || fromCurrency === 'pln' && toCurrency === 'tether') {\n      setComission(0);\n      fetch(`https://min-api.cryptocompare.com/data/price?fsym=${fromCurrency}&tsyms=USDT`).then(res => res.json().then(json => {\n        setComission(json.USDT);\n        console.log(json.USDT);\n      }));\n    }\n  }, [fromCurrency, toCurrency]);\n\n  const onChangeFromPrice = value => {\n    const priceWithComission = comission * value;\n    console.log(priceWithComission);\n\n    if (priceWithComission < 1000) {\n      const comissionAmount = priceWithComission * 0.025;\n      console.log(comissionAmount);\n      const result = value * rates - comissionAmount;\n      console.log(result);\n      setComission(comissionAmount);\n      setToPrice(result);\n      setFromPrice(value);\n    }\n\n    if (priceWithComission >= 1000 && priceWithComission < 5000) {\n      const comissionAmount = priceWithComission * 0.02;\n      console.log(comissionAmount);\n      const result = value * rates - comissionAmount;\n      console.log(result);\n      setComission(comissionAmount);\n      setToPrice(result);\n      setFromPrice(value);\n    }\n\n    if (priceWithComission >= 5000 && priceWithComission < 10000) {\n      const comissionAmount = priceWithComission * 0.015;\n      console.log(comissionAmount);\n      const result = value * rates - comissionAmount;\n      console.log(result);\n      setComission(comissionAmount);\n      setToPrice(result);\n      setFromPrice(value);\n    }\n\n    if (priceWithComission >= 10000) {\n      const comissionAmount = priceWithComission * 0.01;\n      console.log(comissionAmount);\n      const result = value * rates - comissionAmount;\n      console.log(result);\n      setComission(comissionAmount);\n      setToPrice(result);\n      setFromPrice(value);\n    }\n\n    console.log(comission);\n  };\n\n  const onChangeToPrice = value => {\n    setToPrice(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(Block, {\n      currencyFrom: fromCurrency,\n      onChangeCurrencyFrom: setFromCurrency,\n      currencyTo: toCurrency,\n      onChangeCurrencyTo: setToCurrency\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.exchange__rate__thumb,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: css.title,\n        children: [\"\\u041A\\u0443\\u0440\\u0441 \\u043D\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0439 \\u043C\\u043E\\u043C\\u0435\\u043D\\u0442: \", rates]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: css.title,\n        children: [\"\\u041A\\u043E\\u043C\\u0438\\u0441\\u0441\\u0438\\u044F: \", comission]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: css.exchange__rate,\n        children: [/*#__PURE__*/_jsxDEV(ConvertFrom, {\n          value: fromPrice,\n          onChangeValue: onChangeFromPrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ConvertTo, {\n          value: toPrice,\n          onChangeValue: onChangeToPrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CurrencyConverter, \"slNNGKs11XxbYg0H//3cOVL8Yk4=\");\n\n_c = CurrencyConverter;\nexport default CurrencyConverter;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyConverter\");","map":{"version":3,"sources":["C:/Users/user/Documents/GitHub/whiteEx/src/components/CurrencyConverter/CurrencyConverter.jsx"],"names":["css","useState","useEffect","Block","ConvertFrom","ConvertTo","CurrencyConverter","fromCurrency","setFromCurrency","toCurrency","setToCurrency","fromPrice","setFromPrice","toPrice","setToPrice","rates","setRates","comission","setComission","fetch","then","res","json","price","console","log","result","ETH","USD","EUR","PLN","USDT","data","rateUsd","onChangeFromPrice","value","priceWithComission","comissionAmount","onChangeToPrice","wrapper","exchange__rate__thumb","title","exchange__rate"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,gCAAhB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,SAAP,MAAsB,sBAAtB;;AAEA,OAAO,SAASC,iBAAT,GAA6B;AAAA;;AAClC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,SAAD,CAAhD;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,EAAlC;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,CAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;;AAEA,QAAIP,YAAY,KAAK,SAAjB,IAA8BE,UAAU,KAAK,KAAjD,EAAwD;AACtDU,MAAAA,KAAK,CAAC,wDAAD,CAAL,CAAgEC,IAAhE,CACEC,GAAG,IACDA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBE,IAAI,IAAI;AACtBN,QAAAA,QAAQ,CAACM,IAAI,CAACC,KAAN,CAAR;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,KAAjB;AACD,OAHD,CAFJ;AAOD;;AACD,QAAIhB,YAAY,KAAK,SAAjB,IAA8BE,UAAU,KAAK,KAAjD,EAAwD;AACtDU,MAAAA,KAAK,CAAC,uDAAD,CAAL,CAA+DC,IAA/D,CAAoEC,GAAG,IACrEA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBE,IAAI,IAAI;AACtBN,QAAAA,QAAQ,CAACM,IAAI,CAACC,KAAN,CAAR;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,KAAjB;AACD,OAHD,CADF;AAMD;;AACD,QAAIhB,YAAY,KAAK,SAAjB,IAA8BE,UAAU,KAAK,KAAjD,EAAwD;AACtDU,MAAAA,KAAK,CAAC,uDAAD,CAAL,CAA+DC,IAA/D,CAAoEC,GAAG,IACrEA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBE,IAAI,IAAI;AACtBN,QAAAA,QAAQ,CAACM,IAAI,CAACC,KAAN,CAAR;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,KAAjB;AACD,OAHD,CADF;AAMD;;AACD,QAAIhB,YAAY,KAAK,KAAjB,IAA0BE,UAAU,KAAK,SAA7C,EAAwD;AACtDU,MAAAA,KAAK,CAAE,uDAAF,CAAL,CAA+DC,IAA/D,CAAoEC,GAAG,IACrEA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBE,IAAI,IAAI;AACtBN,QAAAA,QAAQ,CAACM,IAAI,CAACI,MAAN,CAAR;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,MAAjB;AACD,OAHD,CADF;AAMD;;AACD,QAAInB,YAAY,KAAK,KAAjB,IAA0BE,UAAU,KAAK,SAA7C,EAAwD;AACtDU,MAAAA,KAAK,CACF,8CAA6CZ,YAAa,SADxD,CAAL,CAEEa,IAFF,CAEOC,GAAG,IACRA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBE,IAAI,IAAI;AACtBN,QAAAA,QAAQ,CAACM,IAAI,CAACI,MAAN,CAAR;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,MAAjB;AACD,OAHD,CAHF;AAQD;;AACD,QAAInB,YAAY,KAAK,KAAjB,IAA0BE,UAAU,KAAK,SAA7C,EAAwD;AACtDU,MAAAA,KAAK,CAAE,uDAAF,CAAL,CAA+DC,IAA/D,CAAoEC,GAAG,IACrEA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBE,IAAI,IAAI;AACtBN,QAAAA,QAAQ,CAACM,IAAI,CAACI,MAAN,CAAR;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,MAAjB;AACD,OAHD,CADF;AAMD;;AACD,QAAInB,YAAY,KAAK,UAAjB,IAA+BE,UAAU,KAAK,KAAlD,EAAyD;AACvDU,MAAAA,KAAK,CAAC,wDAAD,CAAL,CAAgEC,IAAhE,CACEC,GAAG,IACDA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBE,IAAI,IAAI;AACtBN,QAAAA,QAAQ,CAACM,IAAI,CAACC,KAAN,CAAR;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,KAAjB;AACD,OAHD,CAFJ;AAOD;;AACD,QAAIhB,YAAY,KAAK,UAAjB,IAA+BE,UAAU,KAAK,KAAlD,EAAyD;AACvDU,MAAAA,KAAK,CAAC,uDAAD,CAAL,CAA+DC,IAA/D,CAAoEC,GAAG,IACrEA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBE,IAAI,IAAI;AACtBN,QAAAA,QAAQ,CAACM,IAAI,CAACC,KAAN,CAAR;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,KAAjB;AACD,OAHD,CADF;AAMD;;AACD,QAAIhB,YAAY,KAAK,UAAjB,IAA+BE,UAAU,KAAK,KAAlD,EAAyD;AACvDU,MAAAA,KAAK,CAAC,uDAAD,CAAL,CAA+DC,IAA/D,CAAoEC,GAAG,IACrEA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBE,IAAI,IAAI;AACtBN,QAAAA,QAAQ,CAACM,IAAI,CAACC,KAAN,CAAR;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,KAAjB;AACD,OAHD,CADF;AAMD;;AACD,QAAIhB,YAAY,KAAK,KAAjB,IAA0BE,UAAU,KAAK,UAA7C,EAAyD;AACvDU,MAAAA,KAAK,CACH,iEADG,CAAL,CAEEC,IAFF,CAEOC,GAAG,IACRA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBE,IAAI,IAAI;AACtBN,QAAAA,QAAQ,CAACM,IAAI,CAACK,GAAN,CAAR;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACK,GAAjB;AACD,OAHD,CAHF;AAQD;;AACD,QAAIpB,YAAY,KAAK,KAAjB,IAA0BE,UAAU,KAAK,UAA7C,EAAyD;AACvDU,MAAAA,KAAK,CACH,iEADG,CAAL,CAEEC,IAFF,CAEOC,GAAG,IACRA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBE,IAAI,IAAI;AACtBN,QAAAA,QAAQ,CAACM,IAAI,CAACK,GAAN,CAAR;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACK,GAAjB;AACD,OAHD,CAHF;AAQD;;AACD,QAAIpB,YAAY,KAAK,KAAjB,IAA0BE,UAAU,KAAK,UAA7C,EAAyD;AACvDU,MAAAA,KAAK,CACH,iEADG,CAAL,CAEEC,IAFF,CAEOC,GAAG,IACRA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBE,IAAI,IAAI;AACtBN,QAAAA,QAAQ,CAACM,IAAI,CAACK,GAAN,CAAR;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACK,GAAjB;AACD,OAHD,CAHF;AAQD;;AACD,QAAIpB,YAAY,KAAK,QAAjB,IAA6BE,UAAU,KAAK,KAAhD,EAAuD;AACrDU,MAAAA,KAAK,CACH,kEADG,CAAL,CAEEC,IAFF,CAEOC,GAAG,IACRA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBE,IAAI,IAAI;AACtBN,QAAAA,QAAQ,CAACM,IAAI,CAACM,GAAN,CAAR;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACM,GAAjB;AACD,OAHD,CAHF;AAQD;;AACD,QAAIrB,YAAY,KAAK,QAAjB,IAA6BE,UAAU,KAAK,KAAhD,EAAuD;AACrDU,MAAAA,KAAK,CACH,kEADG,CAAL,CAEEC,IAFF,CAEOC,GAAG,IACRA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBE,IAAI,IAAI;AACtBN,QAAAA,QAAQ,CAACM,IAAI,CAACO,GAAN,CAAR;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACO,GAAjB;AACD,OAHD,CAHF;AAQD;;AACD,QAAItB,YAAY,KAAK,QAAjB,IAA6BE,UAAU,KAAK,KAAhD,EAAuD;AACrDU,MAAAA,KAAK,CACH,kEADG,CAAL,CAEEC,IAFF,CAEOC,GAAG,IACRA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBE,IAAI,IAAI;AACtBN,QAAAA,QAAQ,CAACM,IAAI,CAACQ,GAAN,CAAR;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACQ,GAAjB;AACD,OAHD,CAHF;AAQD;;AACD,QAAIvB,YAAY,KAAK,KAAjB,IAA0BE,UAAU,KAAK,QAA7C,EAAuD;AACrDU,MAAAA,KAAK,CACH,kEADG,CAAL,CAEEC,IAFF,CAEOC,GAAG,IACRA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBE,IAAI,IAAI;AACtBN,QAAAA,QAAQ,CAACM,IAAI,CAACS,IAAN,CAAR;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACS,IAAjB;AACD,OAHD,CAHF;AAQD;;AACD,QAAIxB,YAAY,KAAK,KAAjB,IAA0BE,UAAU,KAAK,QAA7C,EAAuD;AACrDU,MAAAA,KAAK,CACH,kEADG,CAAL,CAEEC,IAFF,CAEOC,GAAG,IACRA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBE,IAAI,IAAI;AACtBN,QAAAA,QAAQ,CAACM,IAAI,CAACS,IAAN,CAAR;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACS,IAAjB;AACD,OAHD,CAHF;AAQD;;AACD,QAAIxB,YAAY,KAAK,KAAjB,IAA0BE,UAAU,KAAK,QAA7C,EAAuD;AACrDU,MAAAA,KAAK,CACH,kEADG,CAAL,CAEEC,IAFF,CAEOC,GAAG,IACRA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBE,IAAI,IAAI;AACtBN,QAAAA,QAAQ,CAACM,IAAI,CAACS,IAAN,CAAR;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACS,IAAjB;AACD,OAHD,CAHF;AAQD;;AACD,QACExB,YAAY,KAAK,SAAjB,IACAA,YAAY,KAAK,UADjB,IAEAA,YAAY,KAAK,QAHnB,EAIE;AACAY,MAAAA,KAAK,CAAE,mCAAkCZ,YAAa,EAAjD,CAAL,CAAyDa,IAAzD,CAA8DC,GAAG,IAC/DA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBE,IAAI,IAAI;AACtBJ,QAAAA,YAAY,CAACI,IAAI,CAACU,IAAL,CAAUC,OAAX,CAAZ;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACU,IAAL,CAAUC,OAAtB;AACD,OAHD,CADF;AAMD;;AACD,QAAIxB,UAAU,KAAK,SAAnB,EAA8B;AAC5BU,MAAAA,KAAK,CACF,8CAA6CZ,YAAa,SADxD,CAAL,CAEEa,IAFF,CAEOC,GAAG,IACRA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBE,IAAI,IAAI;AACtBJ,QAAAA,YAAY,CAACI,IAAI,CAACI,MAAN,CAAZ;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,MAAjB;AACD,OAHD,CAHF;AAQD;;AACD,QACEnB,YAAY,KAAK,KAAjB,IACAA,YAAY,KAAK,KADjB,IAECA,YAAY,KAAK,KAAjB,IAA0BE,UAAU,KAAK,UAH5C,EAIE;AACAU,MAAAA,KAAK,CACF,qDAAoDZ,YAAa,YAD/D,CAAL,CAEEa,IAFF,CAEOC,GAAG,IACRA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBE,IAAI,IAAI;AACtBJ,QAAAA,YAAY,CAACI,IAAI,CAACK,GAAN,CAAZ;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACK,GAAjB;AACD,OAHD,CAHF;AAQD;;AACD,QACEpB,YAAY,KAAK,KAAjB,IACAA,YAAY,KAAK,KADjB,IAECA,YAAY,KAAK,KAAjB,IAA0BE,UAAU,KAAK,QAH5C,EAIE;AACAS,MAAAA,YAAY,CAAC,CAAD,CAAZ;AACAC,MAAAA,KAAK,CACF,qDAAoDZ,YAAa,aAD/D,CAAL,CAEEa,IAFF,CAEOC,GAAG,IACRA,GAAG,CAACC,IAAJ,GAAWF,IAAX,CAAgBE,IAAI,IAAI;AACtBJ,QAAAA,YAAY,CAACI,IAAI,CAACS,IAAN,CAAZ;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACS,IAAjB;AACD,OAHD,CAHF;AAQD;AACF,GA7NQ,EA6NN,CAACxB,YAAD,EAAeE,UAAf,CA7NM,CAAT;;AA+NA,QAAMyB,iBAAiB,GAAGC,KAAK,IAAI;AACjC,UAAMC,kBAAkB,GAAGnB,SAAS,GAAGkB,KAAvC;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYW,kBAAZ;;AACA,QAAIA,kBAAkB,GAAG,IAAzB,EAA+B;AAC7B,YAAMC,eAAe,GAAGD,kBAAkB,GAAG,KAA7C;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYY,eAAZ;AAEA,YAAMX,MAAM,GAAGS,KAAK,GAAGpB,KAAR,GAAgBsB,eAA/B;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AAEAR,MAAAA,YAAY,CAACmB,eAAD,CAAZ;AACAvB,MAAAA,UAAU,CAACY,MAAD,CAAV;AACAd,MAAAA,YAAY,CAACuB,KAAD,CAAZ;AACD;;AAED,QAAIC,kBAAkB,IAAI,IAAtB,IAA8BA,kBAAkB,GAAG,IAAvD,EAA6D;AAC3D,YAAMC,eAAe,GAAGD,kBAAkB,GAAG,IAA7C;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYY,eAAZ;AAEA,YAAMX,MAAM,GAAGS,KAAK,GAAGpB,KAAR,GAAgBsB,eAA/B;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AAEAR,MAAAA,YAAY,CAACmB,eAAD,CAAZ;AACAvB,MAAAA,UAAU,CAACY,MAAD,CAAV;AACAd,MAAAA,YAAY,CAACuB,KAAD,CAAZ;AACD;;AAED,QAAIC,kBAAkB,IAAI,IAAtB,IAA8BA,kBAAkB,GAAG,KAAvD,EAA8D;AAC5D,YAAMC,eAAe,GAAGD,kBAAkB,GAAG,KAA7C;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYY,eAAZ;AAEA,YAAMX,MAAM,GAAGS,KAAK,GAAGpB,KAAR,GAAgBsB,eAA/B;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AAEAR,MAAAA,YAAY,CAACmB,eAAD,CAAZ;AACAvB,MAAAA,UAAU,CAACY,MAAD,CAAV;AACAd,MAAAA,YAAY,CAACuB,KAAD,CAAZ;AACD;;AAED,QAAIC,kBAAkB,IAAI,KAA1B,EAAiC;AAC/B,YAAMC,eAAe,GAAGD,kBAAkB,GAAG,IAA7C;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYY,eAAZ;AAEA,YAAMX,MAAM,GAAGS,KAAK,GAAGpB,KAAR,GAAgBsB,eAA/B;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AAEAR,MAAAA,YAAY,CAACmB,eAAD,CAAZ;AACAvB,MAAAA,UAAU,CAACY,MAAD,CAAV;AACAd,MAAAA,YAAY,CAACuB,KAAD,CAAZ;AACD;;AACDX,IAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;AACD,GAnDD;;AAqDA,QAAMqB,eAAe,GAAGH,KAAK,IAAI;AAC/BrB,IAAAA,UAAU,CAACqB,KAAD,CAAV;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEnC,GAAG,CAACuC,OAApB;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,YAAY,EAAEhC,YADhB;AAEE,MAAA,oBAAoB,EAAEC,eAFxB;AAGE,MAAA,UAAU,EAAEC,UAHd;AAIE,MAAA,kBAAkB,EAAEC;AAJtB;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAK,MAAA,SAAS,EAAEV,GAAG,CAACwC,qBAApB;AAAA,8BACE;AAAG,QAAA,SAAS,EAAExC,GAAG,CAACyC,KAAlB;AAAA,wIAAiD1B,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,QAAA,SAAS,EAAEf,GAAG,CAACyC,KAAlB;AAAA,yEAAoCxB,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAI,QAAA,SAAS,EAAEjB,GAAG,CAAC0C,cAAnB;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,KAAK,EAAE/B,SAApB;AAA+B,UAAA,aAAa,EAAEuB;AAA9C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAW,UAAA,KAAK,EAAErB,OAAlB;AAA2B,UAAA,aAAa,EAAEyB;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAlTehC,iB;;KAAAA,iB;AAoThB,eAAeA,iBAAf","sourcesContent":["import css from './CurrencyConverter.module.css';\nimport { useState, useEffect } from 'react';\n\nimport Block from '../Block';\nimport ConvertFrom from '../ConvertFrom';\nimport ConvertTo from 'components/ConvertTo';\n\nexport function CurrencyConverter() {\n  const [fromCurrency, setFromCurrency] = useState('bitcoin');\n  const [toCurrency, setToCurrency] = useState('usd');\n  const [fromPrice, setFromPrice] = useState('');\n  const [toPrice, setToPrice] = useState('');\n  const [rates, setRates] = useState();\n  const [comission, setComission] = useState(0);\n\n  useEffect(() => {\n    setFromPrice('');\n    setToPrice('');\n\n    if (fromCurrency === 'bitcoin' && toCurrency === 'usd') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=BTCUSDT').then(\n        res =>\n          res.json().then(json => {\n            setRates(json.price);\n            console.log(json.price);\n          })\n      );\n    }\n    if (fromCurrency === 'bitcoin' && toCurrency === 'EUR') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=BTCEUR').then(res =>\n        res.json().then(json => {\n          setRates(json.price);\n          console.log(json.price);\n        })\n      );\n    }\n    if (fromCurrency === 'bitcoin' && toCurrency === 'pln') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=BTCPLN').then(res =>\n        res.json().then(json => {\n          setRates(json.price);\n          console.log(json.price);\n        })\n      );\n    }\n    if (fromCurrency === 'usd' && toCurrency === 'bitcoin') {\n      fetch(`https://api.exchangerate.host/convert?from=USD&to=BTC`).then(res =>\n        res.json().then(json => {\n          setRates(json.result);\n          console.log(json.result);\n        })\n      );\n    }\n    if (fromCurrency === 'EUR' && toCurrency === 'bitcoin') {\n      fetch(\n        `https://api.exchangerate.host/convert?from=${fromCurrency}&to=BTC`\n      ).then(res =>\n        res.json().then(json => {\n          setRates(json.result);\n          console.log(json.result);\n        })\n      );\n    }\n    if (fromCurrency === 'pln' && toCurrency === 'bitcoin') {\n      fetch(`https://api.exchangerate.host/convert?from=PLN&to=BTC`).then(res =>\n        res.json().then(json => {\n          setRates(json.result);\n          console.log(json.result);\n        })\n      );\n    }\n    if (fromCurrency === 'ethereum' && toCurrency === 'usd') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=ETHUSDT').then(\n        res =>\n          res.json().then(json => {\n            setRates(json.price);\n            console.log(json.price);\n          })\n      );\n    }\n    if (fromCurrency === 'ethereum' && toCurrency === 'EUR') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=ETHEUR').then(res =>\n        res.json().then(json => {\n          setRates(json.price);\n          console.log(json.price);\n        })\n      );\n    }\n    if (fromCurrency === 'ethereum' && toCurrency === 'pln') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=ETHPLN').then(res =>\n        res.json().then(json => {\n          setRates(json.price);\n          console.log(json.price);\n        })\n      );\n    }\n    if (fromCurrency === 'usd' && toCurrency === 'ethereum') {\n      fetch(\n        'https://min-api.cryptocompare.com/data/price?fsym=USD&tsyms=ETH'\n      ).then(res =>\n        res.json().then(json => {\n          setRates(json.ETH);\n          console.log(json.ETH);\n        })\n      );\n    }\n    if (fromCurrency === 'EUR' && toCurrency === 'ethereum') {\n      fetch(\n        'https://min-api.cryptocompare.com/data/price?fsym=EUR&tsyms=ETH'\n      ).then(res =>\n        res.json().then(json => {\n          setRates(json.ETH);\n          console.log(json.ETH);\n        })\n      );\n    }\n    if (fromCurrency === 'pln' && toCurrency === 'ethereum') {\n      fetch(\n        'https://min-api.cryptocompare.com/data/price?fsym=PLN&tsyms=ETH'\n      ).then(res =>\n        res.json().then(json => {\n          setRates(json.ETH);\n          console.log(json.ETH);\n        })\n      );\n    }\n    if (fromCurrency === 'tether' && toCurrency === 'usd') {\n      fetch(\n        'https://min-api.cryptocompare.com/data/price?fsym=USDT&tsyms=USD'\n      ).then(res =>\n        res.json().then(json => {\n          setRates(json.USD);\n          console.log(json.USD);\n        })\n      );\n    }\n    if (fromCurrency === 'tether' && toCurrency === 'EUR') {\n      fetch(\n        'https://min-api.cryptocompare.com/data/price?fsym=USDT&tsyms=EUR'\n      ).then(res =>\n        res.json().then(json => {\n          setRates(json.EUR);\n          console.log(json.EUR);\n        })\n      );\n    }\n    if (fromCurrency === 'tether' && toCurrency === 'pln') {\n      fetch(\n        'https://min-api.cryptocompare.com/data/price?fsym=USDT&tsyms=PLN'\n      ).then(res =>\n        res.json().then(json => {\n          setRates(json.PLN);\n          console.log(json.PLN);\n        })\n      );\n    }\n    if (fromCurrency === 'usd' && toCurrency === 'tether') {\n      fetch(\n        'https://min-api.cryptocompare.com/data/price?fsym=USD&tsyms=USDT'\n      ).then(res =>\n        res.json().then(json => {\n          setRates(json.USDT);\n          console.log(json.USDT);\n        })\n      );\n    }\n    if (fromCurrency === 'EUR' && toCurrency === 'tether') {\n      fetch(\n        'https://min-api.cryptocompare.com/data/price?fsym=EUR&tsyms=USDT'\n      ).then(res =>\n        res.json().then(json => {\n          setRates(json.USDT);\n          console.log(json.USDT);\n        })\n      );\n    }\n    if (fromCurrency === 'pln' && toCurrency === 'tether') {\n      fetch(\n        'https://min-api.cryptocompare.com/data/price?fsym=PLN&tsyms=USDT'\n      ).then(res =>\n        res.json().then(json => {\n          setRates(json.USDT);\n          console.log(json.USDT);\n        })\n      );\n    }\n    if (\n      fromCurrency === 'bitcoin' ||\n      fromCurrency === 'ethereum' ||\n      fromCurrency === 'tether'\n    ) {\n      fetch(`https://api.coincap.io/v2/rates/${fromCurrency}`).then(res =>\n        res.json().then(json => {\n          setComission(json.data.rateUsd);\n          console.log(json.data.rateUsd);\n        })\n      );\n    }\n    if (toCurrency === 'bitcoin') {\n      fetch(\n        `https://api.exchangerate.host/convert?from=${fromCurrency}&to=BTC`\n      ).then(res =>\n        res.json().then(json => {\n          setComission(json.result);\n          console.log(json.result);\n        })\n      );\n    }\n    if (\n      fromCurrency === 'usd' ||\n      fromCurrency === 'EUR' ||\n      (fromCurrency === 'pln' && toCurrency === 'ethereum')\n    ) {\n      fetch(\n        `https://min-api.cryptocompare.com/data/price?fsym=${fromCurrency}&tsyms=ETH`\n      ).then(res =>\n        res.json().then(json => {\n          setComission(json.ETH);\n          console.log(json.ETH);\n        })\n      );\n    }\n    if (\n      fromCurrency === 'usd' ||\n      fromCurrency === 'EUR' ||\n      (fromCurrency === 'pln' && toCurrency === 'tether')\n    ) {\n      setComission(0);\n      fetch(\n        `https://min-api.cryptocompare.com/data/price?fsym=${fromCurrency}&tsyms=USDT`\n      ).then(res =>\n        res.json().then(json => {\n          setComission(json.USDT);\n          console.log(json.USDT);\n        })\n      );\n    }\n  }, [fromCurrency, toCurrency]);\n\n  const onChangeFromPrice = value => {\n    const priceWithComission = comission * value;\n    console.log(priceWithComission);\n    if (priceWithComission < 1000) {\n      const comissionAmount = priceWithComission * 0.025;\n      console.log(comissionAmount);\n\n      const result = value * rates - comissionAmount;\n      console.log(result);\n\n      setComission(comissionAmount);\n      setToPrice(result);\n      setFromPrice(value);\n    }\n\n    if (priceWithComission >= 1000 && priceWithComission < 5000) {\n      const comissionAmount = priceWithComission * 0.02;\n      console.log(comissionAmount);\n\n      const result = value * rates - comissionAmount;\n      console.log(result);\n\n      setComission(comissionAmount);\n      setToPrice(result);\n      setFromPrice(value);\n    }\n\n    if (priceWithComission >= 5000 && priceWithComission < 10000) {\n      const comissionAmount = priceWithComission * 0.015;\n      console.log(comissionAmount);\n\n      const result = value * rates - comissionAmount;\n      console.log(result);\n\n      setComission(comissionAmount);\n      setToPrice(result);\n      setFromPrice(value);\n    }\n\n    if (priceWithComission >= 10000) {\n      const comissionAmount = priceWithComission * 0.01;\n      console.log(comissionAmount);\n\n      const result = value * rates - comissionAmount;\n      console.log(result);\n\n      setComission(comissionAmount);\n      setToPrice(result);\n      setFromPrice(value);\n    }\n    console.log(comission);\n  };\n\n  const onChangeToPrice = value => {\n    setToPrice(value);\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <Block\n        currencyFrom={fromCurrency}\n        onChangeCurrencyFrom={setFromCurrency}\n        currencyTo={toCurrency}\n        onChangeCurrencyTo={setToCurrency}\n      />\n      <div className={css.exchange__rate__thumb}>\n        <p className={css.title}>Курс на данный момент: {rates}</p>\n        <p className={css.title}>Комиссия: {comission}</p>\n        <ul className={css.exchange__rate}>\n          <ConvertFrom value={fromPrice} onChangeValue={onChangeFromPrice} />\n          <ConvertTo value={toPrice} onChangeValue={onChangeToPrice} />\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default CurrencyConverter;\n"]},"metadata":{},"sourceType":"module"}