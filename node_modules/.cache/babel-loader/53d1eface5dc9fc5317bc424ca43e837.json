{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\whiteEx\\\\src\\\\components\\\\Block\\\\Block.jsx\",\n    _s = $RefreshSig$();\n\nimport css from './Block.module.css';\nimport give_arrow from '../../images/give_arrow.png';\nimport get_arrow from '../../images/get_arrow.png';\nimport { useState } from 'react';\nimport BlockGet from 'components/BlockGet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultCurrencies = [{\n  type: 'Bitcoin',\n  value: 'Bitcoin',\n  img: require('../../images/Bitcoin.png'),\n  rate: fetch('https://api.binance.com/api/v3/avgPrice?symbol=BTCUSDT').then(r => r.json().then(j => console.log(parseFloat(j.price).toFixed(2))))\n}, {\n  type: 'Ethereum',\n  value: 'Ethereum',\n  img: require('../../images/Ethereum.png')\n}, {\n  type: 'USDT TRC20',\n  value: 'USDT TRC20',\n  img: require('../../images/USDT.png')\n}, {\n  type: 'USDT ERC20',\n  value: 'USDT ERC20',\n  img: require('../../images/USDT.png')\n}, {\n  type: 'USD',\n  value: 'USD',\n  img: require('../../images/USD.png')\n}, {\n  type: 'EUR',\n  value: 'EUR',\n  img: require('../../images/EUR.png')\n}, {\n  type: 'PLN',\n  value: 'PLN',\n  img: require('../../images/zl.png')\n}];\nexport const Block = _ref => {\n  _s();\n\n  let {\n    currency,\n    onChangeCurrency\n  } = _ref;\n  const [selectedCurrency, setSelectedCurrency] = useState('');\n\n  const handleClick = id => {\n    setSelectedCurrency({\n      selected: id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.give__currency,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.crypto__thumb,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.title,\n          children: [\"\\u041E\\u0422\\u0414\\u0410\\u0401\\u0422\\u0415:\", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: give_arrow,\n            width: \"24\",\n            height: \"28\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: css.crypto__currencies__list,\n          children: defaultCurrencies.map(_ref2 => {\n            let {\n              key,\n              value,\n              img\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => onChangeCurrency(value),\n              className: value === currency ? css.active : {},\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: css.cryptocurrency__type,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: css.currency__img,\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: img,\n                    width: \"36\",\n                    height: \"36\",\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this), value]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)\n            }, value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Block, \"kpdd93FWrHoiBaszvOs2fBdL5rI=\");\n\n_c = Block;\nexport default Block;\n\nvar _c;\n\n$RefreshReg$(_c, \"Block\");","map":{"version":3,"sources":["C:/Users/user/Documents/GitHub/whiteEx/src/components/Block/Block.jsx"],"names":["css","give_arrow","get_arrow","useState","BlockGet","defaultCurrencies","type","value","img","require","rate","fetch","then","r","json","j","console","log","parseFloat","price","toFixed","Block","currency","onChangeCurrency","selectedCurrency","setSelectedCurrency","handleClick","id","selected","give__currency","crypto__thumb","title","crypto__currencies__list","map","key","active","cryptocurrency__type","currency__img"],"mappings":"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","sourcesContent":["import css from './Block.module.css';\nimport give_arrow from '../../images/give_arrow.png';\nimport get_arrow from '../../images/get_arrow.png';\nimport { useState } from 'react';\nimport BlockGet from 'components/BlockGet';\n\nconst defaultCurrencies = [\n  {\n    type: 'Bitcoin',\n    value: 'Bitcoin',\n    img: require('../../images/Bitcoin.png'),\n    rate: fetch('https://api.binance.com/api/v3/avgPrice?symbol=BTCUSDT').then(\n      r => r.json().then(j => console.log(parseFloat(j.price).toFixed(2)))\n    ),\n  },\n  {\n    type: 'Ethereum',\n    value: 'Ethereum',\n    img: require('../../images/Ethereum.png'),\n  },\n  {\n    type: 'USDT TRC20',\n    value: 'USDT TRC20',\n    img: require('../../images/USDT.png'),\n  },\n  {\n    type: 'USDT ERC20',\n    value: 'USDT ERC20',\n    img: require('../../images/USDT.png'),\n  },\n  {\n    type: 'USD',\n    value: 'USD',\n    img: require('../../images/USD.png'),\n  },\n  {\n    type: 'EUR',\n    value: 'EUR',\n    img: require('../../images/EUR.png'),\n  },\n  {\n    type: 'PLN',\n    value: 'PLN',\n    img: require('../../images/zl.png'),\n  },\n];\n\nexport const Block = ({ currency, onChangeCurrency }) => {\n  const [selectedCurrency, setSelectedCurrency] = useState('');\n\n  const handleClick = id => {\n    setSelectedCurrency({ selected: id });\n  };\n\n  return (\n    <>\n      <div className={css.give__currency}>\n        <div className={css.crypto__thumb}>\n          <div className={css.title}>\n            ОТДАЁТЕ:\n            <img src={give_arrow} width=\"24\" height=\"28\" alt=\"\" />\n          </div>\n          <ul className={css.crypto__currencies__list}>\n            {defaultCurrencies.map(({ key, value, img }) => (\n              <li\n                key={value}\n                onClick={() => onChangeCurrency(value)}\n                className={value === currency ? css.active : {}}\n              >\n                <p className={css.cryptocurrency__type}>\n                  <span className={css.currency__img}>\n                    <img src={img} width=\"36\" height=\"36\" alt=\"\" />\n                  </span>\n                  {value}\n                </p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Block;\n"]},"metadata":{},"sourceType":"module"}