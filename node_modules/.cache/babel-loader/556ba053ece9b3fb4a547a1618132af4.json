{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\whiteEx\\\\src\\\\components\\\\CurrencyConverter\\\\CurrencyConverter.jsx\",\n    _s = $RefreshSig$();\n\nimport css from './CurrencyConverter.module.css';\nimport { useState, useEffect } from 'react';\nimport Block from '../Block';\nimport BlockGet from 'components/BlockGet';\nimport ConvertFrom from '../ConvertFrom';\nimport ConvertTo from 'components/ConvertTo'; // До 1.000$ - 2, 5 %\n// Від 1.000$ до 5.000$ - 2%\n// Від 5.000$ до 10.000$ - 1,5%\n//   Від 10.000$ - 1 %\n// function Comission() {\n//   if (amount < 1000) {\n//    const comissionAmount = price * 0.025;\n//    const finalSum = sum + comissionAmount;\n//   } else if (amount) {\n//     price * 0.02;\n//   } else if (amount) {\n//     price * 0.015;\n//   } else {\n//     price * 0.01;\n//   }\n// }\n// const API_KEY = 'b9474da3d7b64496bd5be9a5519204ba';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CurrencyConverter() {\n  _s();\n\n  const [fromCurrency, setFromCurrency] = useState('BTC');\n  const [toCurrency, setToCurrency] = useState('USD');\n  const [fromPrice, setFromPrice] = useState('');\n  const [toPrice, setToPrice] = useState('');\n  const [rates, setRates] = useState();\n  useEffect(() => {\n    if (fromCurrency === 'BTC' && toCurrency === 'USD') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=BTCUSDT').then(res => res.json().then(json => {\n        setRates(json.price);\n        console.log(json.price);\n      }));\n    }\n\n    if (fromCurrency === 'BTC' && toCurrency === 'EUR') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=BTCEUR').then(res => res.json().then(json => {\n        setRates(json.price);\n        console.log(json.price);\n      }));\n    }\n\n    if (fromCurrency === 'BTC' && toCurrency === 'PLN') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=BTCPLN').then(res => res.json().then(json => {\n        setRates(json.price);\n        console.log(json.price);\n      }));\n    }\n\n    if (fromCurrency === 'USD' && toCurrency === 'BTC') {\n      fetch(`https://api.exchangerate.host/convert?from=${fromCurrency}&to=${toCurrency}`).then(res => res.json().then(json => {\n        setRates(json.result);\n        console.log(json.result);\n      }));\n    }\n\n    if (fromCurrency === 'EUR' && toCurrency === 'BTC') {\n      fetch(`https://api.exchangerate.host/convert?from=${fromCurrency}&to=${toCurrency}`).then(res => res.json().then(json => {\n        setRates(json.result);\n        console.log(json.result);\n      }));\n    }\n\n    if (fromCurrency === 'PLN' && toCurrency === 'BTC') {\n      fetch(`https://api.exchangerate.host/convert?from=${fromCurrency}&to=${toCurrency}`).then(res => res.json().then(json => {\n        setRates(json.result);\n        console.log(json.result);\n      }));\n    }\n\n    if (fromCurrency === 'ETH' && toCurrency === 'USD') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=ETHUSDT').then(res => res.json().then(json => {\n        setRates(json.price);\n        console.log(json.price);\n      }));\n    }\n\n    if (fromCurrency === 'ETH' && toCurrency === 'EUR') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=ETHEUR').then(res => res.json().then(json => {\n        setRates(json.price);\n        console.log(json.price);\n      }));\n    }\n\n    if (fromCurrency === 'ETH' && toCurrency === 'PLN') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=ETHPLN').then(res => res.json().then(json => {\n        setRates(json.price);\n        console.log(json.price);\n      }));\n    }\n\n    if (fromCurrency === 'USD' && toCurrency === 'ETH') {\n      fetch('  https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=BTC,USD,EUR').then(res => res.json().then(json => {\n        setRates(json.price);\n        console.log(json.price);\n      }));\n    }\n  }, [fromCurrency, toCurrency]);\n\n  const onChangeFromPrice = value => {\n    const price = rates;\n    console.log(price);\n    const result = value * rates;\n    console.log(result);\n    setToPrice(result);\n    setFromPrice(value);\n  };\n\n  const onChangeToPrice = value => {\n    setToPrice(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(Block, {\n      currency: fromCurrency,\n      onChangeCurrency: setFromCurrency\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BlockGet, {\n      currency: toCurrency,\n      onChangeCurrency: setToCurrency\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.exchange__rate__thumb,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.title,\n        children: [\"\\u041A\\u0443\\u0440\\u0441 \\u043D\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0439 \\u043C\\u043E\\u043C\\u0435\\u043D\\u0442: \", rates]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: css.exchange__rate,\n        children: [/*#__PURE__*/_jsxDEV(ConvertFrom, {\n          value: fromPrice,\n          onChangeValue: onChangeFromPrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ConvertTo, {\n          value: toPrice,\n          onChangeValue: onChangeToPrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CurrencyConverter, \"/3c8FzOV7qJl21gRsrRHBjMFYRo=\");\n\n_c = CurrencyConverter;\nexport default CurrencyConverter;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyConverter\");","map":{"version":3,"sources":["C:/Users/user/Documents/GitHub/whiteEx/src/components/CurrencyConverter/CurrencyConverter.jsx"],"names":["css","useState","useEffect","Block","BlockGet","ConvertFrom","ConvertTo","CurrencyConverter","fromCurrency","setFromCurrency","toCurrency","setToCurrency","fromPrice","setFromPrice","toPrice","setToPrice","rates","setRates","fetch","then","res","json","price","console","log","result","onChangeFromPrice","value","onChangeToPrice","wrapper","exchange__rate__thumb","title","exchange__rate"],"mappings":"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","sourcesContent":["import css from './CurrencyConverter.module.css';\nimport { useState, useEffect } from 'react';\n\nimport Block from '../Block';\nimport BlockGet from 'components/BlockGet';\nimport ConvertFrom from '../ConvertFrom';\nimport ConvertTo from 'components/ConvertTo';\n\n// До 1.000$ - 2, 5 %\n// Від 1.000$ до 5.000$ - 2%\n// Від 5.000$ до 10.000$ - 1,5%\n//   Від 10.000$ - 1 %\n\n// function Comission() {\n//   if (amount < 1000) {\n//    const comissionAmount = price * 0.025;\n//    const finalSum = sum + comissionAmount;\n//   } else if (amount) {\n//     price * 0.02;\n//   } else if (amount) {\n//     price * 0.015;\n//   } else {\n//     price * 0.01;\n//   }\n// }\n\n// const API_KEY = 'b9474da3d7b64496bd5be9a5519204ba';\n\nexport function CurrencyConverter() {\n  const [fromCurrency, setFromCurrency] = useState('BTC');\n  const [toCurrency, setToCurrency] = useState('USD');\n  const [fromPrice, setFromPrice] = useState('');\n  const [toPrice, setToPrice] = useState('');\n  const [rates, setRates] = useState();\n\n  useEffect(() => {\n    if (fromCurrency === 'BTC' && toCurrency === 'USD') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=BTCUSDT').then(\n        res =>\n          res.json().then(json => {\n            setRates(json.price);\n            console.log(json.price);\n          })\n      );\n    }\n    if (fromCurrency === 'BTC' && toCurrency === 'EUR') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=BTCEUR').then(res =>\n        res.json().then(json => {\n          setRates(json.price);\n          console.log(json.price);\n        })\n      );\n    }\n    if (fromCurrency === 'BTC' && toCurrency === 'PLN') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=BTCPLN').then(res =>\n        res.json().then(json => {\n          setRates(json.price);\n          console.log(json.price);\n        })\n      );\n    }\n    if (fromCurrency === 'USD' && toCurrency === 'BTC') {\n      fetch(\n        `https://api.exchangerate.host/convert?from=${fromCurrency}&to=${toCurrency}`\n      ).then(res =>\n        res.json().then(json => {\n          setRates(json.result);\n          console.log(json.result);\n        })\n      );\n    }\n    if (fromCurrency === 'EUR' && toCurrency === 'BTC') {\n      fetch(\n        `https://api.exchangerate.host/convert?from=${fromCurrency}&to=${toCurrency}`\n      ).then(res =>\n        res.json().then(json => {\n          setRates(json.result);\n          console.log(json.result);\n        })\n      );\n    }\n    if (fromCurrency === 'PLN' && toCurrency === 'BTC') {\n      fetch(\n        `https://api.exchangerate.host/convert?from=${fromCurrency}&to=${toCurrency}`\n      ).then(res =>\n        res.json().then(json => {\n          setRates(json.result);\n          console.log(json.result);\n        })\n      );\n    }\n    if (fromCurrency === 'ETH' && toCurrency === 'USD') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=ETHUSDT').then(\n        res =>\n          res.json().then(json => {\n            setRates(json.price);\n            console.log(json.price);\n          })\n      );\n    }\n    if (fromCurrency === 'ETH' && toCurrency === 'EUR') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=ETHEUR').then(res =>\n        res.json().then(json => {\n          setRates(json.price);\n          console.log(json.price);\n        })\n      );\n    }\n    if (fromCurrency === 'ETH' && toCurrency === 'PLN') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=ETHPLN').then(res =>\n        res.json().then(json => {\n          setRates(json.price);\n          console.log(json.price);\n        })\n      );\n    }\n    if (fromCurrency === 'USD' && toCurrency === 'ETH') {\n      fetch(\n        '  https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=BTC,USD,EUR'\n      ).then(res =>\n        res.json().then(json => {\n          setRates(json.price);\n          console.log(json.price);\n        })\n      );\n    }\n  }, [fromCurrency, toCurrency]);\n\n  const onChangeFromPrice = value => {\n    const price = rates;\n    console.log(price);\n    const result = value * rates;\n    console.log(result);\n    setToPrice(result);\n    setFromPrice(value);\n  };\n\n  const onChangeToPrice = value => {\n    setToPrice(value);\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <Block currency={fromCurrency} onChangeCurrency={setFromCurrency} />\n      <BlockGet currency={toCurrency} onChangeCurrency={setToCurrency} />\n      <div className={css.exchange__rate__thumb}>\n        <div className={css.title}>Курс на данный момент: {rates}</div>\n        <ul className={css.exchange__rate}>\n          <ConvertFrom value={fromPrice} onChangeValue={onChangeFromPrice} />\n          <ConvertTo value={toPrice} onChangeValue={onChangeToPrice} />\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default CurrencyConverter;\n"]},"metadata":{},"sourceType":"module"}