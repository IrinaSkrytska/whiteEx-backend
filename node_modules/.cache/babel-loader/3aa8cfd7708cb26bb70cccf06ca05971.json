{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\whiteEx\\\\src\\\\components\\\\BlockGet\\\\BlockGet.jsx\";\nimport css from './BlockGet.module.css';\nimport get_arrow from '../../images/get_arrow.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fiatCurrencies = [{\n  name: 'USD',\n  value: 'USD',\n  img: require('../../images/USD.png')\n}, {\n  name: 'EUR',\n  value: 'EUR',\n  img: require('../../images/EUR.png')\n}, {\n  name: 'PLN',\n  value: 'PLN',\n  img: require('../../images/zl.png')\n}];\nconst cryptoCurrencies = [{\n  name: 'Bitcoin',\n  value: 'BTC',\n  img: require('../../images/Bitcoin.png')\n}, {\n  name: 'Ethereum',\n  value: 'ETH',\n  img: require('../../images/Ethereum.png')\n}, {\n  name: 'Tether',\n  value: 'tether',\n  img: require('../../images/USDT.png')\n}];\nexport const BlockGet = _ref => {\n  let {\n    key,\n    value,\n    name,\n    img,\n    onChangeCurrency,\n    currency\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.get__currency,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.crypto__thumb,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.title,\n          children: [\"\\u041F\\u041E\\u041B\\u0423\\u0427\\u0410\\u0415\\u0422\\u0415:\", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: get_arrow,\n            width: \"24\",\n            height: \"28\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), fromCurrency === 'BTC' || fromCurrency === 'ETH' || fromCurrency === 'tether' ? 'fiat' : 'crypto', cryptoCurrencies.map(_ref2 => {\n          let {\n            key,\n            value,\n            img,\n            name\n          } = _ref2;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => onChangeCurrency(value),\n            className: value === currency ? css.active : {},\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: css.cryptocurrency__type,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: css.currency__img,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: img,\n                  width: \"36\",\n                  height: \"36\",\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this);\n        }), fiatCurrencies.map(_ref3 => {\n          let {\n            key,\n            value,\n            img,\n            name\n          } = _ref3;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => onChangeCurrency(value),\n            className: value === currency ? css.active : {},\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: css.cryptocurrency__type,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: css.currency__img,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: img,\n                  width: \"36\",\n                  height: \"36\",\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: css.crypto__currencies__list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = BlockGet;\nexport default BlockGet;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlockGet\");","map":{"version":3,"sources":["C:/Users/user/Documents/GitHub/whiteEx/src/components/BlockGet/BlockGet.jsx"],"names":["css","get_arrow","fiatCurrencies","name","value","img","require","cryptoCurrencies","BlockGet","key","onChangeCurrency","currency","get__currency","crypto__thumb","title","fromCurrency","map","active","cryptocurrency__type","currency__img","crypto__currencies__list"],"mappings":"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","sourcesContent":["import css from './BlockGet.module.css';\nimport get_arrow from '../../images/get_arrow.png';\n\nconst fiatCurrencies = [\n  {\n    name: 'USD',\n    value: 'USD',\n    img: require('../../images/USD.png'),\n  },\n  {\n    name: 'EUR',\n    value: 'EUR',\n    img: require('../../images/EUR.png'),\n  },\n  {\n    name: 'PLN',\n    value: 'PLN',\n    img: require('../../images/zl.png'),\n  },\n];\n\nconst cryptoCurrencies = [\n  {\n    name: 'Bitcoin',\n    value: 'BTC',\n    img: require('../../images/Bitcoin.png'),\n  },\n  {\n    name: 'Ethereum',\n    value: 'ETH',\n    img: require('../../images/Ethereum.png'),\n  },\n  {\n    name: 'Tether',\n    value: 'tether',\n    img: require('../../images/USDT.png'),\n  },\n];\n\nexport const BlockGet = ({\n  key,\n  value,\n  name,\n  img,\n  onChangeCurrency,\n  currency,\n}) => {\n  return (\n    <>\n      <div className={css.get__currency}>\n        <div className={css.crypto__thumb}>\n          <div className={css.title}>\n            ПОЛУЧАЕТЕ:\n            <img src={get_arrow} width=\"24\" height=\"28\" alt=\"\" />\n          </div>\n          {fromCurrency === 'BTC' ||\n          fromCurrency === 'ETH' ||\n          fromCurrency === 'tether'\n            ? 'fiat'\n            : 'crypto'}\n          {/* CONDITION */}\n          {cryptoCurrencies.map(({ key, value, img, name }) => (\n            <li\n              key={value}\n              onClick={() => onChangeCurrency(value)}\n              className={value === currency ? css.active : {}}\n            >\n              <p className={css.cryptocurrency__type}>\n                <span className={css.currency__img}>\n                  <img src={img} width=\"36\" height=\"36\" alt=\"\" />\n                </span>\n                {name}\n              </p>\n            </li>\n          ))}\n\n          {/* CONDITION */}\n          {fiatCurrencies.map(({ key, value, img, name }) => (\n            <li\n              key={value}\n              onClick={() => onChangeCurrency(value)}\n              className={value === currency ? css.active : {}}\n            >\n              <p className={css.cryptocurrency__type}>\n                <span className={css.currency__img}>\n                  <img src={img} width=\"36\" height=\"36\" alt=\"\" />\n                </span>\n                {name}\n              </p>\n            </li>\n          ))}\n          <ul className={css.crypto__currencies__list}></ul>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default BlockGet;\n"]},"metadata":{},"sourceType":"module"}