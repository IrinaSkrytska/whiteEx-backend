{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\whiteEx\\\\src\\\\components\\\\BlockGet\\\\BlockGet.jsx\",\n    _s = $RefreshSig$();\n\nimport css from './BlockGet.module.css';\nimport get_arrow from '../../images/get_arrow.png';\nimport USD from '../../images/USD.png';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BlockGet() {\n  _s();\n\n  const [firstCurrencyIndex, setFirstCurrencyIndex] = useState(0);\n  const [secondCurrencyIndex, setSecondCurrencyIndex] = useState(0);\n  const firstCurrenciesArray = [{\n    type: 'bitcoin'\n  }, {\n    type: 'Etherium'\n  }];\n  const secondCurrenciesArray = [{\n    type: 'USD'\n  }, {\n    type: 'UAH'\n  }];\n  const firstSelectedCurrency = firstCurrenciesArray[firstCurrencyIndex];\n  const secondSelectedCurrency = secondCurrenciesArray[secondCurrencyIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [firstCurrenciesArray.map((_ref, index) => {\n      let {\n        type\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: index === firstCurrencyIndex ? 'active' : '',\n        onClick: () => setFirstCurrencyIndex(index),\n        children: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this);\n    }), secondCurrenciesArray.map((_ref2, index) => {\n      let {\n        type\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: index === secondSelectedCurrency ? 'active' : '',\n        onClick: () => setSecondCurrencyIndex(index),\n        children: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u041A\\u041E\\u041D\\u0412\\u0415\\u0420\\u0422\\u0410\\u0426\\u0406\\u042F \\u0411\\u0423\\u0414\\u0415 \\u041F\\u0420\\u041E\\u0412\\u041E\\u0414\\u0418\\u0422\\u0418\\u0421\\u042C \\u0417 \", firstSelectedCurrency.type, \" \\u041D\\u0410\", ' ', secondSelectedCurrency.type, ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BlockGet, \"RlbnxnC6LSL3Qsln3mPXDxkP0+g=\");\n\n_c = BlockGet;\nexport default BlockGet;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlockGet\");","map":{"version":3,"sources":["C:/Users/user/Documents/GitHub/whiteEx/src/components/BlockGet/BlockGet.jsx"],"names":["css","get_arrow","USD","useState","BlockGet","firstCurrencyIndex","setFirstCurrencyIndex","secondCurrencyIndex","setSecondCurrencyIndex","firstCurrenciesArray","type","secondCurrenciesArray","firstSelectedCurrency","secondSelectedCurrency","map","index"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,uBAAhB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CH,QAAQ,CAAC,CAAD,CAA5D;AACA,QAAM,CAACI,mBAAD,EAAsBC,sBAAtB,IAAgDL,QAAQ,CAAC,CAAD,CAA9D;AAEA,QAAMM,oBAAoB,GAAG,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAD,EAAsB;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAAtB,CAA7B;AACA,QAAMC,qBAAqB,GAAG,CAAC;AAAED,IAAAA,IAAI,EAAE;AAAR,GAAD,EAAkB;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAAlB,CAA9B;AAEA,QAAME,qBAAqB,GAAGH,oBAAoB,CAACJ,kBAAD,CAAlD;AACA,QAAMQ,sBAAsB,GAAGF,qBAAqB,CAACJ,mBAAD,CAApD;AAEA,sBACE;AAAA,eAEGE,oBAAoB,CAACK,GAArB,CAAyB,OAAWC,KAAX,KAAqB;AAAA,UAApB;AAAEL,QAAAA;AAAF,OAAoB;AAC7C,0BACE;AACE,QAAA,SAAS,EAAEK,KAAK,KAAKV,kBAAV,GAA+B,QAA/B,GAA0C,EADvD;AAEE,QAAA,OAAO,EAAE,MAAMC,qBAAqB,CAACS,KAAD,CAFtC;AAAA,kBAIGL;AAJH;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATA,CAFH,EAcGC,qBAAqB,CAACG,GAAtB,CAA0B,QAAWC,KAAX,KAAqB;AAAA,UAApB;AAAEL,QAAAA;AAAF,OAAoB;AAC9C,0BACE;AACE,QAAA,SAAS,EAAEK,KAAK,KAAKF,sBAAV,GAAmC,QAAnC,GAA8C,EAD3D;AAEE,QAAA,OAAO,EAAE,MAAML,sBAAsB,CAACO,KAAD,CAFvC;AAAA,kBAIGL;AAJH;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATA,CAdH,eAwBE;AAAA,2LACkCE,qBAAqB,CAACF,IADxD,mBACiE,GADjE,EAEGG,sBAAsB,CAACH,IAF1B,EAEgC,GAFhC;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAzCQN,Q;;KAAAA,Q;AA2CT,eAAeA,QAAf","sourcesContent":["import css from './BlockGet.module.css';\nimport get_arrow from '../../images/get_arrow.png';\nimport USD from '../../images/USD.png';\nimport { useState } from 'react';\n\nfunction BlockGet() {\n  const [firstCurrencyIndex, setFirstCurrencyIndex] = useState(0);\n  const [secondCurrencyIndex, setSecondCurrencyIndex] = useState(0);\n\n  const firstCurrenciesArray = [{ type: 'bitcoin' }, { type: 'Etherium' }];\n  const secondCurrenciesArray = [{ type: 'USD' }, { type: 'UAH' }];\n\n  const firstSelectedCurrency = firstCurrenciesArray[firstCurrencyIndex];\n  const secondSelectedCurrency = secondCurrenciesArray[secondCurrencyIndex];\n\n  return (\n    <div>\n      {/* перший блок */}\n      {firstCurrenciesArray.map(({ type }, index) => {\n        return (\n          <div\n            className={index === firstCurrencyIndex ? 'active' : ''}\n            onClick={() => setFirstCurrencyIndex(index)}\n          >\n            {type}\n          </div>\n        );\n      })}\n      {/* другий блок */}\n\n      {secondCurrenciesArray.map(({ type }, index) => {\n        return (\n          <div\n            className={index === secondSelectedCurrency ? 'active' : ''}\n            onClick={() => setSecondCurrencyIndex(index)}\n          >\n            {type}\n          </div>\n        );\n      })}\n      <p>\n        КОНВЕРТАЦІЯ БУДЕ ПРОВОДИТИСЬ З {firstSelectedCurrency.type} НА{' '}\n        {secondSelectedCurrency.type}{' '}\n      </p>\n    </div>\n  );\n}\n\nexport default BlockGet;\n"]},"metadata":{},"sourceType":"module"}