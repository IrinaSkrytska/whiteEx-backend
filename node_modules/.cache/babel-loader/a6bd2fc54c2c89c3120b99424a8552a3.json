{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\whiteEx\\\\src\\\\components\\\\Block\\\\Block.jsx\",\n    _s = $RefreshSig$();\n\nimport css from './Block.module.css';\nimport give_arrow from '../../images/give_arrow.png';\nimport get_arrow from '../../images/get_arrow.png';\nimport { useState } from 'react';\nimport BlockGet from 'components/BlockGet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultCurrencies = [{\n  type: 'Bitcoin',\n  value: 'Bitcoin',\n  img: require('../../images/Bitcoin.png')\n}, {\n  type: 'Ethereum',\n  value: 'Ethereum',\n  img: require('../../images/Ethereum.png')\n}, {\n  type: 'USDT TRC20',\n  value: 'USDT TRC20',\n  img: require('../../images/USDT.png')\n}, {\n  type: 'USDT ERC20',\n  value: 'USDT ERC20',\n  img: require('../../images/USDT.png')\n}, {\n  type: 'USD',\n  value: 'USD',\n  img: require('../../images/USD.png')\n}, {\n  type: 'EUR',\n  value: 'EUR',\n  img: require('../../images/EUR.png')\n}, {\n  type: 'PLN',\n  value: 'PLN',\n  img: require('../../images/zl.png')\n}];\nexport const Block = () => {\n  _s();\n\n  const [selectedCurrency, setSelectedCurrency] = useState('');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.give__currency,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.crypto__thumb,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: css.title,\n          children: [\"\\u041E\\u0422\\u0414\\u0410\\u0401\\u0422\\u0415:\", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: give_arrow,\n            width: \"24\",\n            height: \"28\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: css.crypto__currencies__list,\n          children: defaultCurrencies.map(_ref => {\n            let {\n              key,\n              value,\n              img\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => onChangeCurrency(value),\n              className: value === currency ? css.active : {} // className={value === currency ? css.active : {}}\n              ,\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: css.cryptocurrency__type,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: css.currency__img,\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: img,\n                    width: \"36\",\n                    height: \"36\",\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this), value]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)\n            }, value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Block, \"kpdd93FWrHoiBaszvOs2fBdL5rI=\");\n\n_c = Block;\nexport default Block;\n\nvar _c;\n\n$RefreshReg$(_c, \"Block\");","map":{"version":3,"sources":["C:/Users/user/Documents/GitHub/whiteEx/src/components/Block/Block.jsx"],"names":["css","give_arrow","get_arrow","useState","BlockGet","defaultCurrencies","type","value","img","require","Block","selectedCurrency","setSelectedCurrency","give__currency","crypto__thumb","title","crypto__currencies__list","map","key","onChangeCurrency","currency","active","cryptocurrency__type","currency__img"],"mappings":"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","sourcesContent":["import css from './Block.module.css';\nimport give_arrow from '../../images/give_arrow.png';\nimport get_arrow from '../../images/get_arrow.png';\nimport { useState } from 'react';\nimport BlockGet from 'components/BlockGet';\n\nconst defaultCurrencies = [\n  {\n    type: 'Bitcoin',\n    value: 'Bitcoin',\n    img: require('../../images/Bitcoin.png'),\n  },\n  {\n    type: 'Ethereum',\n    value: 'Ethereum',\n    img: require('../../images/Ethereum.png'),\n  },\n  {\n    type: 'USDT TRC20',\n    value: 'USDT TRC20',\n    img: require('../../images/USDT.png'),\n  },\n  {\n    type: 'USDT ERC20',\n    value: 'USDT ERC20',\n    img: require('../../images/USDT.png'),\n  },\n  {\n    type: 'USD',\n    value: 'USD',\n    img: require('../../images/USD.png'),\n  },\n  {\n    type: 'EUR',\n    value: 'EUR',\n    img: require('../../images/EUR.png'),\n  },\n  {\n    type: 'PLN',\n    value: 'PLN',\n    img: require('../../images/zl.png'),\n  },\n];\n\nexport const Block = () => {\n  const [selectedCurrency, setSelectedCurrency] = useState('');\n\n  return (\n    <>\n      <div className={css.give__currency}>\n        <div className={css.crypto__thumb}>\n          <div className={css.title}>\n            ОТДАЁТЕ:\n            <img src={give_arrow} width=\"24\" height=\"28\" alt=\"\" />\n          </div>\n          <ul className={css.crypto__currencies__list}>\n            {defaultCurrencies.map(({ key, value, img }) => (\n              <li\n                key={value}\n                onClick={() => onChangeCurrency(value)}\n                className={value === currency ? css.active : {}}\n\n                // className={value === currency ? css.active : {}}\n              >\n                <p className={css.cryptocurrency__type}>\n                  <span className={css.currency__img}>\n                    <img src={img} width=\"36\" height=\"36\" alt=\"\" />\n                  </span>\n                  {value}\n                </p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default Block;\n"]},"metadata":{},"sourceType":"module"}