{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\whiteEx\\\\src\\\\components\\\\Modal\\\\Modal.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback } from 'react';\nimport { createPortal } from 'react-dom';\nimport Modal from 'react-bootstrap/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ShowModal(_ref) {\n  _s();\n\n  let {\n    show,\n    handleClose,\n    editableItem\n  } = _ref;\n  const [contact, setContact] = useState({\n    id: editableItem.id,\n    name: editableItem.name,\n    number: editableItem.number\n  });\n  const arrayContact = useSelector(state => state.contacts);\n  const dispatch = useDispatch();\n\n  const editContact = data => dispatch(contactsOperations.editContact(data));\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n\n    switch (name) {\n      case 'name':\n        setContact(prevState => ({ ...prevState,\n          [name]: value\n        }));\n        break;\n\n      case 'number':\n        setContact(prevState => ({ ...prevState,\n          [name]: value\n        }));\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleChangeSubmit = event => {\n    event.preventDefault();\n    const eventNameValue = contact.name;\n    const arrayContactNormalize = arrayContact.contacts.map(e => e.name.toLowerCase().trim());\n    const filterName = arrayContactNormalize.find(e => e === eventNameValue.toLowerCase().trim());\n    filterName ? alert(`${eventNameValue} is already in Contacts`) : editContact(contact);\n    handleClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Edit contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            /* className={s.name} */\n            type: \"text\",\n            name: \"name\",\n            pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n            title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n            required: true,\n            value: contact.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            /* className={s.number} */\n            type: \"tel\",\n            name: \"number\",\n            pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n            title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n            required: true,\n            value: contact.number,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          onClick: handleChangeSubmit,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ShowModal, \"tm652w/+4qoyb4adzlWwZnntFjM=\", true);\n\n_c = ShowModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowModal\");","map":{"version":3,"sources":["C:/Users/user/Documents/GitHub/whiteEx/src/components/Modal/Modal.jsx"],"names":["React","useEffect","useCallback","createPortal","Modal","ShowModal","show","handleClose","editableItem","contact","setContact","useState","id","name","number","arrayContact","useSelector","state","contacts","dispatch","useDispatch","editContact","data","contactsOperations","handleChange","event","value","target","prevState","handleChangeSubmit","preventDefault","eventNameValue","arrayContactNormalize","map","e","toLowerCase","trim","filterName","find","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,QAA8C,OAA9C;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;;AAEA,eAAe,SAASC,SAAT,OAAwD;AAAA;;AAAA,MAArC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA;AAArB,GAAqC;AACrE,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,QAAQ,CAAC;AACrCC,IAAAA,EAAE,EAAEJ,YAAY,CAACI,EADoB;AAErCC,IAAAA,IAAI,EAAEL,YAAY,CAACK,IAFkB;AAGrCC,IAAAA,MAAM,EAAEN,YAAY,CAACM;AAHgB,GAAD,CAAtC;AAKA,QAAMC,YAAY,GAAGC,WAAW,CAACC,KAAK,IAAIA,KAAK,CAACC,QAAhB,CAAhC;AACA,QAAMC,QAAQ,GAAGC,WAAW,EAA5B;;AACA,QAAMC,WAAW,GAAGC,IAAI,IAAIH,QAAQ,CAACI,kBAAkB,CAACF,WAAnB,CAA+BC,IAA/B,CAAD,CAApC;;AAEA,QAAME,YAAY,GAAGC,KAAK,IAAI;AAC5B,UAAM;AAAEZ,MAAAA,IAAF;AAAQa,MAAAA;AAAR,QAAkBD,KAAK,CAACE,MAA9B;;AACA,YAAQd,IAAR;AACE,WAAK,MAAL;AACEH,QAAAA,UAAU,CAACkB,SAAS,KAAK,EACvB,GAAGA,SADoB;AAEvB,WAACf,IAAD,GAAQa;AAFe,SAAL,CAAV,CAAV;AAIA;;AAEF,WAAK,QAAL;AACEhB,QAAAA,UAAU,CAACkB,SAAS,KAAK,EACvB,GAAGA,SADoB;AAEvB,WAACf,IAAD,GAAQa;AAFe,SAAL,CAAV,CAAV;AAIA;;AAEF;AACE;AAhBJ;AAkBD,GApBD;;AAsBA,QAAMG,kBAAkB,GAAGJ,KAAK,IAAI;AAClCA,IAAAA,KAAK,CAACK,cAAN;AAEA,UAAMC,cAAc,GAAGtB,OAAO,CAACI,IAA/B;AACA,UAAMmB,qBAAqB,GAAGjB,YAAY,CAACG,QAAb,CAAsBe,GAAtB,CAA0BC,CAAC,IACvDA,CAAC,CAACrB,IAAF,CAAOsB,WAAP,GAAqBC,IAArB,EAD4B,CAA9B;AAIA,UAAMC,UAAU,GAAGL,qBAAqB,CAACM,IAAtB,CACjBJ,CAAC,IAAIA,CAAC,KAAKH,cAAc,CAACI,WAAf,GAA6BC,IAA7B,EADM,CAAnB;AAIAC,IAAAA,UAAU,GACNE,KAAK,CAAE,GAAER,cAAe,yBAAnB,CADC,GAENV,WAAW,CAACZ,OAAD,CAFf;AAIAF,IAAAA,WAAW;AACZ,GAjBD;;AAmBA,sBACE;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAED,IAAb;AAAmB,MAAA,MAAM,EAAEC,WAA3B;AAAA,8BACE,QAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA,+BACE,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD,CAAO,IAAP;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE;AACA,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,IAAI,EAAC,MAHP;AAIE,YAAA,OAAO,EAAC,wHAJV;AAKE,YAAA,KAAK,EAAC,wIALR;AAME,YAAA,QAAQ,MANV;AAOE,YAAA,KAAK,EAAEE,OAAO,CAACI,IAPjB;AAQE,YAAA,QAAQ,EAAEW;AARZ;AAAA;AAAA;AAAA;AAAA,kBAFF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,eAcE;AACE;AACA,YAAA,IAAI,EAAC,KAFP;AAGE,YAAA,IAAI,EAAC,QAHP;AAIE,YAAA,OAAO,EAAC,wFAJV;AAKE,YAAA,KAAK,EAAC,8FALR;AAME,YAAA,QAAQ,MANV;AAOE,YAAA,KAAK,EAAEf,OAAO,CAACK,MAPjB;AAQE,YAAA,QAAQ,EAAEU;AARZ;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eA+BE,QAAC,KAAD,CAAO,MAAP;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,OAAO,EAAEjB,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,IAAI,EAAC,QAA/B;AAAwC,UAAA,OAAO,EAAEsB,kBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA4CD;;GA/FuBxB,S;;KAAAA,S","sourcesContent":["import React, { useEffect, useCallback } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nexport default function ShowModal({ show, handleClose, editableItem }) {\r\n  const [contact, setContact] = useState({\r\n    id: editableItem.id,\r\n    name: editableItem.name,\r\n    number: editableItem.number,\r\n  });\r\n  const arrayContact = useSelector(state => state.contacts);\r\n  const dispatch = useDispatch();\r\n  const editContact = data => dispatch(contactsOperations.editContact(data));\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setContact(prevState => ({\r\n          ...prevState,\r\n          [name]: value,\r\n        }));\r\n        break;\r\n\r\n      case 'number':\r\n        setContact(prevState => ({\r\n          ...prevState,\r\n          [name]: value,\r\n        }));\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleChangeSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const eventNameValue = contact.name;\r\n    const arrayContactNormalize = arrayContact.contacts.map(e =>\r\n      e.name.toLowerCase().trim()\r\n    );\r\n\r\n    const filterName = arrayContactNormalize.find(\r\n      e => e === eventNameValue.toLowerCase().trim()\r\n    );\r\n\r\n    filterName\r\n      ? alert(`${eventNameValue} is already in Contacts`)\r\n      : editContact(contact);\r\n\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit contact</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div /* className={s.searchForm} */>\r\n            <h2>Name</h2>\r\n            <input\r\n              /* className={s.name} */\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n              required\r\n              value={contact.name}\r\n              onChange={handleChange}\r\n            />\r\n\r\n            <h2>Number</h2>\r\n            <input\r\n              /* className={s.number} */\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n              required\r\n              value={contact.number}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" type=\"submit\" onClick={handleChangeSubmit}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}