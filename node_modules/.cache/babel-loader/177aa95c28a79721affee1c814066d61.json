{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\whiteEx\\\\src\\\\components\\\\CurrencyConverter\\\\CurrencyConverter.jsx\",\n    _s = $RefreshSig$();\n\nimport css from './CurrencyConverter.module.css';\nimport { useState, useEffect } from 'react';\nimport Block from '../Block';\nimport ConvertFrom from '../ConvertFrom';\nimport ConvertTo from 'components/ConvertTo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CurrencyConverter() {\n  _s();\n\n  const [fromCurrency, setFromCurrency] = useState('bitcoin');\n  const [toCurrency, setToCurrency] = useState('usd');\n  const [fromPrice, setFromPrice] = useState('');\n  const [toPrice, setToPrice] = useState('');\n  const [rates, setRates] = useState();\n  const [comission, setComission] = useState('');\n  const [comissionFee, setComissionFee] = useState('');\n  useEffect(() => {\n    setFromPrice('');\n    setToPrice('');\n\n    if (fromCurrency === 'bitcoin' && toCurrency === 'usd') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=BTCUSDT').then(res => res.json().then(json => {\n        console.log(json.price);\n        const roundedRates = Math.round(json.price);\n        setRates(roundedRates);\n      }));\n    }\n\n    if (fromCurrency === 'bitcoin' && toCurrency === 'EUR') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=BTCEUR').then(res => res.json().then(json => {\n        console.log(json.price);\n        const roundedRates = Math.round(json.price);\n        setRates(roundedRates);\n      }));\n    }\n\n    if (fromCurrency === 'bitcoin' && toCurrency === 'pln') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=BTCPLN').then(res => res.json().then(json => {\n        console.log(json.price);\n        const roundedRates = Math.round(json.price);\n        setRates(roundedRates);\n      }));\n    }\n\n    if (fromCurrency === 'usd' && toCurrency === 'bitcoin') {\n      fetch(`https://api.exchangerate.host/convert?from=USD&to=BTC`).then(res => res.json().then(json => {\n        console.log(json.result);\n        const roundedRates = Math.round(json.result);\n        setRates(roundedRates);\n      }));\n    }\n\n    if (fromCurrency === 'EUR' && toCurrency === 'bitcoin') {\n      fetch(`https://api.exchangerate.host/convert?from=${fromCurrency}&to=BTC`).then(res => res.json().then(json => {\n        console.log(json.result);\n        const roundedRates = Math.round(json.result);\n        setRates(roundedRates);\n      }));\n    }\n\n    if (fromCurrency === 'pln' && toCurrency === 'bitcoin') {\n      fetch(`https://api.exchangerate.host/convert?from=PLN&to=BTC`).then(res => res.json().then(json => {\n        console.log(json.result);\n        const roundedRates = Math.round(json.result);\n        setRates(roundedRates);\n      }));\n    }\n\n    if (fromCurrency === 'ethereum' && toCurrency === 'usd') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=ETHUSDT').then(res => res.json().then(json => {\n        console.log(json.price);\n        const roundedRates = Math.round(json.price);\n        setRates(roundedRates);\n      }));\n    }\n\n    if (fromCurrency === 'ethereum' && toCurrency === 'EUR') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=ETHEUR').then(res => res.json().then(json => {\n        console.log(json.price);\n        const roundedRates = Math.round(json.price);\n        setRates(roundedRates);\n      }));\n    }\n\n    if (fromCurrency === 'ethereum' && toCurrency === 'pln') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=ETHPLN').then(res => res.json().then(json => {\n        console.log(json.price);\n        const roundedRates = Math.round(json.price);\n        setRates(roundedRates);\n      }));\n    }\n\n    if (fromCurrency === 'usd' && toCurrency === 'ethereum') {\n      fetch('https://min-api.cryptocompare.com/data/price?fsym=USD&tsyms=ETH').then(res => res.json().then(json => {\n        console.log(json.ETH);\n        const roundedRates = Math.round(json.ETH);\n        setRates(roundedRates);\n      }));\n    }\n\n    if (fromCurrency === 'EUR' && toCurrency === 'ethereum') {\n      fetch('https://min-api.cryptocompare.com/data/price?fsym=EUR&tsyms=ETH').then(res => res.json().then(json => {\n        console.log(json.ETH);\n        const roundedRates = Math.round(json.ETH);\n        setRates(roundedRates);\n      }));\n    }\n\n    if (fromCurrency === 'pln' && toCurrency === 'ethereum') {\n      fetch('https://min-api.cryptocompare.com/data/price?fsym=PLN&tsyms=ETH').then(res => res.json().then(json => {\n        console.log(json.ETH);\n        const roundedRates = Math.round(json.ETH);\n        setRates(roundedRates);\n      }));\n    }\n\n    if (fromCurrency === 'tether' && toCurrency === 'usd') {\n      fetch('https://min-api.cryptocompare.com/data/price?fsym=USDT&tsyms=USD').then(res => res.json().then(json => {\n        console.log(json.USD);\n        const roundedRates = Math.round(json.USD);\n        setRates(roundedRates);\n      }));\n    }\n\n    if (fromCurrency === 'tether' && toCurrency === 'EUR') {\n      fetch('https://min-api.cryptocompare.com/data/price?fsym=USDT&tsyms=EUR').then(res => res.json().then(json => {\n        console.log(json.EUR);\n        const roundedRates = Math.round(json.EUR);\n        setRates(roundedRates);\n      }));\n    }\n\n    if (fromCurrency === 'tether' && toCurrency === 'pln') {\n      fetch('https://min-api.cryptocompare.com/data/price?fsym=USDT&tsyms=PLN').then(res => res.json().then(json => {\n        console.log(json.PLN);\n        const roundedRates = Math.round(json.PLN);\n        setRates(roundedRates);\n      }));\n    }\n\n    if (fromCurrency === 'usd' && toCurrency === 'tether') {\n      fetch('https://min-api.cryptocompare.com/data/price?fsym=USD&tsyms=USDT').then(res => res.json().then(json => {\n        console.log(json.USDT);\n        const roundedRates = Math.round(json.USDT);\n        setRates(roundedRates);\n      }));\n    }\n\n    if (fromCurrency === 'EUR' && toCurrency === 'tether') {\n      fetch('https://min-api.cryptocompare.com/data/price?fsym=EUR&tsyms=USDT').then(res => res.json().then(json => {\n        console.log(json.USDT);\n        const roundedRates = Math.round(json.USDT);\n        setRates(roundedRates);\n      }));\n    }\n\n    if (fromCurrency === 'pln' && toCurrency === 'tether') {\n      fetch('https://min-api.cryptocompare.com/data/price?fsym=PLN&tsyms=USDT').then(res => res.json().then(json => {\n        console.log(json.USDT);\n        const roundedRates = Math.round(json.USDT);\n        setRates(roundedRates);\n      }));\n    }\n\n    if (fromCurrency === 'bitcoin' || fromCurrency === 'ethereum' || fromCurrency === 'tether') {\n      fetch(`https://api.coincap.io/v2/rates/${fromCurrency}`).then(res => res.json().then(json => {\n        // setComission(json.data.rateUsd);\n        // console.log(json.data.rateUsd);\n        const roundedComission = Math.round(json.data.rateUsd);\n        console.log(roundedComission);\n        setComission(roundedComission);\n      }));\n    }\n\n    if (toCurrency === 'bitcoin') {\n      fetch(`https://api.exchangerate.host/convert?from=${fromCurrency}&to=BTC`).then(res => res.json().then(json => {\n        setComission(json.result);\n        console.log(json.result);\n      }));\n    }\n\n    if (fromCurrency === 'usd' || fromCurrency === 'EUR' || fromCurrency === 'pln' && toCurrency === 'ethereum') {\n      fetch(`https://min-api.cryptocompare.com/data/price?fsym=${fromCurrency}&tsyms=ETH`).then(res => res.json().then(json => {\n        setComission(json.ETH);\n        console.log(json.ETH);\n      }));\n    }\n\n    if (fromCurrency === 'usd' || fromCurrency === 'EUR' || fromCurrency === 'pln' && toCurrency === 'tether') {\n      fetch(`https://min-api.cryptocompare.com/data/price?fsym=${fromCurrency}&tsyms=USDT`).then(res => res.json().then(json => {\n        setComission(json.USDT);\n        console.log(json.USDT);\n      }));\n    }\n\n    setComissionFee('');\n  }, [fromCurrency, toCurrency, rates]);\n\n  const onChangeFromPrice = value => {\n    const priceWithComission = comission * value;\n    console.log(priceWithComission);\n\n    if (priceWithComission < 1000) {\n      const comissionAmount = priceWithComission * 0.025;\n      console.log(comissionAmount);\n      const result = value * rates - comissionAmount;\n      console.log(result);\n      setComissionFee(comissionAmount);\n      setToPrice(result);\n      setFromPrice(value);\n    }\n\n    if (priceWithComission >= 1000 && priceWithComission < 5000) {\n      const comissionAmount = priceWithComission * 0.02;\n      console.log(comissionAmount);\n      const result = value * rates - comissionAmount;\n      console.log(result);\n      setComissionFee(comissionAmount);\n      setToPrice(result);\n      setFromPrice(value);\n    }\n\n    if (priceWithComission >= 5000 && priceWithComission < 10000) {\n      const comissionAmount = priceWithComission * 0.015;\n      console.log(comissionAmount);\n      const result = value * rates - comissionAmount;\n      console.log(result);\n      setComissionFee(comissionAmount);\n      setToPrice(result);\n      setFromPrice(value);\n    }\n\n    if (priceWithComission >= 10000) {\n      const comissionAmount = priceWithComission * 0.01;\n      console.log(comissionAmount);\n      const result = value * rates - comissionAmount;\n      console.log(result);\n      setComissionFee(comissionAmount);\n      setToPrice(result);\n      setFromPrice(value);\n    }\n  };\n\n  const onChangeToPrice = value => {\n    setToPrice(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(Block, {\n      currencyFrom: fromCurrency,\n      onChangeCurrencyFrom: setFromCurrency,\n      currencyTo: toCurrency,\n      onChangeCurrencyTo: setToCurrency\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.exchange__rate__thumb,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: css.title,\n        children: [\"\\u041A\\u0443\\u0440\\u0441 \\u043D\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0439 \\u043C\\u043E\\u043C\\u0435\\u043D\\u0442: \", rates]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: css.title,\n        children: [\"\\u041A\\u043E\\u043C\\u0438\\u0441\\u0441\\u0438\\u044F: \", comissionFee]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: css.exchange__rate,\n        children: [/*#__PURE__*/_jsxDEV(ConvertFrom, {\n          value: fromPrice,\n          onChangeValue: onChangeFromPrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ConvertTo, {\n          value: toPrice,\n          onChangeValue: onChangeToPrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CurrencyConverter, \"Ymp+TtOoKjHjkadjxastUcWuyqU=\");\n\n_c = CurrencyConverter;\nexport default CurrencyConverter;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyConverter\");","map":{"version":3,"sources":["C:/Users/user/Documents/GitHub/whiteEx/src/components/CurrencyConverter/CurrencyConverter.jsx"],"names":["css","useState","useEffect","Block","ConvertFrom","ConvertTo","CurrencyConverter","fromCurrency","setFromCurrency","toCurrency","setToCurrency","fromPrice","setFromPrice","toPrice","setToPrice","rates","setRates","comission","setComission","comissionFee","setComissionFee","fetch","then","res","json","console","log","price","roundedRates","Math","round","result","ETH","USD","EUR","PLN","USDT","roundedComission","data","rateUsd","onChangeFromPrice","value","priceWithComission","comissionAmount","onChangeToPrice","wrapper","exchange__rate__thumb","title","exchange__rate"],"mappings":"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","sourcesContent":["import css from './CurrencyConverter.module.css';\nimport { useState, useEffect } from 'react';\n\nimport Block from '../Block';\nimport ConvertFrom from '../ConvertFrom';\nimport ConvertTo from 'components/ConvertTo';\n\nexport function CurrencyConverter() {\n  const [fromCurrency, setFromCurrency] = useState('bitcoin');\n  const [toCurrency, setToCurrency] = useState('usd');\n  const [fromPrice, setFromPrice] = useState('');\n  const [toPrice, setToPrice] = useState('');\n  const [rates, setRates] = useState();\n  const [comission, setComission] = useState('');\n  const [comissionFee, setComissionFee] = useState('');\n\n  useEffect(() => {\n    setFromPrice('');\n    setToPrice('');\n\n    if (fromCurrency === 'bitcoin' && toCurrency === 'usd') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=BTCUSDT').then(\n        res =>\n          res.json().then(json => {\n            console.log(json.price);\n            const roundedRates = Math.round(json.price);\n            setRates(roundedRates);\n          })\n      );\n    }\n    if (fromCurrency === 'bitcoin' && toCurrency === 'EUR') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=BTCEUR').then(res =>\n        res.json().then(json => {\n          console.log(json.price);\n          const roundedRates = Math.round(json.price);\n          setRates(roundedRates);\n        })\n      );\n    }\n    if (fromCurrency === 'bitcoin' && toCurrency === 'pln') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=BTCPLN').then(res =>\n        res.json().then(json => {\n          console.log(json.price);\n          const roundedRates = Math.round(json.price);\n          setRates(roundedRates);\n        })\n      );\n    }\n    if (fromCurrency === 'usd' && toCurrency === 'bitcoin') {\n      fetch(`https://api.exchangerate.host/convert?from=USD&to=BTC`).then(res =>\n        res.json().then(json => {\n          console.log(json.result);\n          const roundedRates = Math.round(json.result);\n          setRates(roundedRates);\n        })\n      );\n    }\n    if (fromCurrency === 'EUR' && toCurrency === 'bitcoin') {\n      fetch(\n        `https://api.exchangerate.host/convert?from=${fromCurrency}&to=BTC`\n      ).then(res =>\n        res.json().then(json => {\n          console.log(json.result);\n          const roundedRates = Math.round(json.result);\n          setRates(roundedRates);\n        })\n      );\n    }\n    if (fromCurrency === 'pln' && toCurrency === 'bitcoin') {\n      fetch(`https://api.exchangerate.host/convert?from=PLN&to=BTC`).then(res =>\n        res.json().then(json => {\n          console.log(json.result);\n          const roundedRates = Math.round(json.result);\n          setRates(roundedRates);\n        })\n      );\n    }\n    if (fromCurrency === 'ethereum' && toCurrency === 'usd') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=ETHUSDT').then(\n        res =>\n          res.json().then(json => {\n            console.log(json.price);\n            const roundedRates = Math.round(json.price);\n            setRates(roundedRates);\n          })\n      );\n    }\n    if (fromCurrency === 'ethereum' && toCurrency === 'EUR') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=ETHEUR').then(res =>\n        res.json().then(json => {\n          console.log(json.price);\n          const roundedRates = Math.round(json.price);\n          setRates(roundedRates);\n        })\n      );\n    }\n    if (fromCurrency === 'ethereum' && toCurrency === 'pln') {\n      fetch('https://api.binance.com/api/v3/avgPrice?symbol=ETHPLN').then(res =>\n        res.json().then(json => {\n          console.log(json.price);\n          const roundedRates = Math.round(json.price);\n          setRates(roundedRates);\n        })\n      );\n    }\n    if (fromCurrency === 'usd' && toCurrency === 'ethereum') {\n      fetch(\n        'https://min-api.cryptocompare.com/data/price?fsym=USD&tsyms=ETH'\n      ).then(res =>\n        res.json().then(json => {\n          console.log(json.ETH);\n          const roundedRates = Math.round(json.ETH);\n          setRates(roundedRates);\n        })\n      );\n    }\n    if (fromCurrency === 'EUR' && toCurrency === 'ethereum') {\n      fetch(\n        'https://min-api.cryptocompare.com/data/price?fsym=EUR&tsyms=ETH'\n      ).then(res =>\n        res.json().then(json => {\n          console.log(json.ETH);\n          const roundedRates = Math.round(json.ETH);\n          setRates(roundedRates);\n        })\n      );\n    }\n    if (fromCurrency === 'pln' && toCurrency === 'ethereum') {\n      fetch(\n        'https://min-api.cryptocompare.com/data/price?fsym=PLN&tsyms=ETH'\n      ).then(res =>\n        res.json().then(json => {\n          console.log(json.ETH);\n          const roundedRates = Math.round(json.ETH);\n          setRates(roundedRates);\n        })\n      );\n    }\n    if (fromCurrency === 'tether' && toCurrency === 'usd') {\n      fetch(\n        'https://min-api.cryptocompare.com/data/price?fsym=USDT&tsyms=USD'\n      ).then(res =>\n        res.json().then(json => {\n          console.log(json.USD);\n          const roundedRates = Math.round(json.USD);\n          setRates(roundedRates);\n        })\n      );\n    }\n    if (fromCurrency === 'tether' && toCurrency === 'EUR') {\n      fetch(\n        'https://min-api.cryptocompare.com/data/price?fsym=USDT&tsyms=EUR'\n      ).then(res =>\n        res.json().then(json => {\n          console.log(json.EUR);\n          const roundedRates = Math.round(json.EUR);\n          setRates(roundedRates);\n        })\n      );\n    }\n    if (fromCurrency === 'tether' && toCurrency === 'pln') {\n      fetch(\n        'https://min-api.cryptocompare.com/data/price?fsym=USDT&tsyms=PLN'\n      ).then(res =>\n        res.json().then(json => {\n          console.log(json.PLN);\n          const roundedRates = Math.round(json.PLN);\n          setRates(roundedRates);\n        })\n      );\n    }\n    if (fromCurrency === 'usd' && toCurrency === 'tether') {\n      fetch(\n        'https://min-api.cryptocompare.com/data/price?fsym=USD&tsyms=USDT'\n      ).then(res =>\n        res.json().then(json => {\n          console.log(json.USDT);\n          const roundedRates = Math.round(json.USDT);\n          setRates(roundedRates);\n        })\n      );\n    }\n    if (fromCurrency === 'EUR' && toCurrency === 'tether') {\n      fetch(\n        'https://min-api.cryptocompare.com/data/price?fsym=EUR&tsyms=USDT'\n      ).then(res =>\n        res.json().then(json => {\n          console.log(json.USDT);\n          const roundedRates = Math.round(json.USDT);\n          setRates(roundedRates);\n        })\n      );\n    }\n    if (fromCurrency === 'pln' && toCurrency === 'tether') {\n      fetch(\n        'https://min-api.cryptocompare.com/data/price?fsym=PLN&tsyms=USDT'\n      ).then(res =>\n        res.json().then(json => {\n          console.log(json.USDT);\n          const roundedRates = Math.round(json.USDT);\n          setRates(roundedRates);\n        })\n      );\n    }\n    if (\n      fromCurrency === 'bitcoin' ||\n      fromCurrency === 'ethereum' ||\n      fromCurrency === 'tether'\n    ) {\n      fetch(`https://api.coincap.io/v2/rates/${fromCurrency}`).then(res =>\n        res.json().then(json => {\n          // setComission(json.data.rateUsd);\n          // console.log(json.data.rateUsd);\n          const roundedComission = Math.round(json.data.rateUsd);\n          console.log(roundedComission);\n          setComission(roundedComission);\n        })\n      );\n    }\n    if (toCurrency === 'bitcoin') {\n      fetch(\n        `https://api.exchangerate.host/convert?from=${fromCurrency}&to=BTC`\n      ).then(res =>\n        res.json().then(json => {\n          setComission(json.result);\n          console.log(json.result);\n        })\n      );\n    }\n    if (\n      fromCurrency === 'usd' ||\n      fromCurrency === 'EUR' ||\n      (fromCurrency === 'pln' && toCurrency === 'ethereum')\n    ) {\n      fetch(\n        `https://min-api.cryptocompare.com/data/price?fsym=${fromCurrency}&tsyms=ETH`\n      ).then(res =>\n        res.json().then(json => {\n          setComission(json.ETH);\n          console.log(json.ETH);\n        })\n      );\n    }\n    if (\n      fromCurrency === 'usd' ||\n      fromCurrency === 'EUR' ||\n      (fromCurrency === 'pln' && toCurrency === 'tether')\n    ) {\n      fetch(\n        `https://min-api.cryptocompare.com/data/price?fsym=${fromCurrency}&tsyms=USDT`\n      ).then(res =>\n        res.json().then(json => {\n          setComission(json.USDT);\n          console.log(json.USDT);\n        })\n      );\n    }\n    setComissionFee('');\n  }, [fromCurrency, toCurrency, rates]);\n\n  const onChangeFromPrice = value => {\n    const priceWithComission = comission * value;\n    console.log(priceWithComission);\n\n    if (priceWithComission < 1000) {\n      const comissionAmount = priceWithComission * 0.025;\n      console.log(comissionAmount);\n\n      const result = value * rates - comissionAmount;\n      console.log(result);\n\n      setComissionFee(comissionAmount);\n      setToPrice(result);\n      setFromPrice(value);\n    }\n\n    if (priceWithComission >= 1000 && priceWithComission < 5000) {\n      const comissionAmount = priceWithComission * 0.02;\n      console.log(comissionAmount);\n\n      const result = value * rates - comissionAmount;\n      console.log(result);\n\n      setComissionFee(comissionAmount);\n      setToPrice(result);\n      setFromPrice(value);\n    }\n\n    if (priceWithComission >= 5000 && priceWithComission < 10000) {\n      const comissionAmount = priceWithComission * 0.015;\n      console.log(comissionAmount);\n\n      const result = value * rates - comissionAmount;\n      console.log(result);\n\n      setComissionFee(comissionAmount);\n      setToPrice(result);\n      setFromPrice(value);\n    }\n\n    if (priceWithComission >= 10000) {\n      const comissionAmount = priceWithComission * 0.01;\n      console.log(comissionAmount);\n\n      const result = value * rates - comissionAmount;\n      console.log(result);\n\n      setComissionFee(comissionAmount);\n      setToPrice(result);\n      setFromPrice(value);\n    }\n  };\n\n  const onChangeToPrice = value => {\n    setToPrice(value);\n  };\n\n  return (\n    <div className={css.wrapper}>\n      <Block\n        currencyFrom={fromCurrency}\n        onChangeCurrencyFrom={setFromCurrency}\n        currencyTo={toCurrency}\n        onChangeCurrencyTo={setToCurrency}\n      />\n      <div className={css.exchange__rate__thumb}>\n        <p className={css.title}>Курс на данный момент: {rates}</p>\n        <p className={css.title}>Комиссия: {comissionFee}</p>\n        <ul className={css.exchange__rate}>\n          <ConvertFrom value={fromPrice} onChangeValue={onChangeFromPrice} />\n          <ConvertTo value={toPrice} onChangeValue={onChangeToPrice} />\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default CurrencyConverter;\n"]},"metadata":{},"sourceType":"module"}