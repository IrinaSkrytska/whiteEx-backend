{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\GitHub\\\\whiteEx\\\\src\\\\components\\\\CurrencyConverter\\\\CurrencyConverter.jsx\",\n    _s = $RefreshSig$();\n\nimport css from './CurrencyConverter.module.css';\nimport { useState, useEffect } from 'react';\nimport Block from '../Block';\nimport BlockGet from 'components/BlockGet';\nimport ConvertFrom from '../ConvertFrom';\nimport ConvertTo from 'components/ConvertTo'; // До 1.000$ - 2, 5 %\n// Від 1.000$ до 5.000$ - 2%\n// Від 5.000$ до 10.000$ - 1,5%\n//   Від 10.000$ - 1 %\n// function Comission() {\n//   if (amount < 1000) {\n//    const comissionAmount = price * 0.025;\n//    const finalSum = sum + comissionAmount;\n//   } else if (amount) {\n//     price * 0.02;\n//   } else if (amount) {\n//     price * 0.015;\n//   } else {\n//     price * 0.01;\n//   }\n// }\n// function onBitcoinClickUSD(event) {\n//   event.preventDefault();\n//   fetch('https://api.binance.com/api/v3/avgPrice?symbol=BTCUSDT').then(r =>\n//     r.json().then(j => console.log(parseFloat(j.price).toFixed(2)))\n//   );\n// }\n// function onBitcoinClickEUR(event) {\n//   event.preventDefault();\n//   fetch('https://api.binance.com/api/v3/avgPrice?symbol=BTCEUR').then(r =>\n//     r.json().then(j => console.log(parseFloat(j.price).toFixed(2)))\n//   );\n// }\n// function onBitcoinClickPLN(event) {\n//   event.preventDefault();\n//   fetch('https://api.binance.com/api/v3/avgPrice?symbol=BTCPLN').then(r =>\n//     r.json().then(j => console.log(parseFloat(j.price).toFixed(2)))\n//   );\n// }\n// function onEthereumClickUSD(event) {\n//   event.preventDefault();\n//   fetch('https://api.binance.com/api/v3/avgPrice?symbol=ETHUSDT').then(r =>\n//     r.json().then(j => console.log(parseFloat(j.price).toFixed(2)))\n//   );\n// }\n// function onEthereumClickEUR(event) {\n//   event.preventDefault();\n//   fetch('https://api.binance.com/api/v3/avgPrice?symbol=ETHEUR').then(r =>\n//     r.json().then(j => console.log(parseFloat(j.price).toFixed(2)))\n//   );\n// }\n// function onEthereumClickPLN(event) {\n//   event.preventDefault();\n//   fetch('https://api.binance.com/api/v3/avgPrice?symbol=ETHPLN').then(r =>\n//     r.json().then(j => console.log(parseFloat(j.price).toFixed(2)))\n//   );\n// }\n// function onTRC20ClickUSD(event) {\n//   event.preventDefault();\n//   const data = fetch(\n//     'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=tether'\n//   ).then(r => r.json().then(data => console.log(data[0].current_price)));\n// }\n// function onTRC20ClickEUR(event) {\n//   event.preventDefault();\n//   const data = fetch(\n//     'https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&ids=tether'\n//   ).then(r => r.json().then(data => console.log(data[0].current_price)));\n// }\n// function onTRC20ClickPLN(event) {\n//   event.preventDefault();\n//   const data = fetch(\n//     'https://api.coingecko.com/api/v3/coins/markets?vs_currency=pln&ids=tether'\n//   ).then(r => r.json().then(data => console.log(data[0].current_price)));\n// }\n// function onERC20ClickUSD(event) {\n//   event.preventDefault();\n//   const data = fetch(\n//     'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=tether'\n//   ).then(r => r.json().then(data => console.log(data[0].current_price)));\n// }\n// function onGiveInputClick(event) {\n//   event.preventDefault();\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function CurrencyConverter() {\n  _s();\n\n  const [fromCurrency, setFromCurrency] = useState('Bitcoin');\n  const [toCurrency, setToCurrency] = useState('USD');\n  const [fromPrice, setFromPrice] = useState('');\n  const [toPrice, setToPrice] = useState('');\n  const [rates, setRates] = useState({});\n  useEffect(() => {\n    fetch(`https://api.coingecko.com/api/v3/exchange_rates`).then(r => r.json().then(data => {\n      // setRates(data[0].current_price);\n      console.log(data);\n    })).catch(error => {\n      console.log('Error');\n    });\n  }, []);\n\n  const onChangeFromPrice = value => {\n    const price = value / rates[fromCurrency];\n    const result = price * rates[toCurrency];\n    setToPrice(result);\n    setFromPrice(value);\n  };\n\n  const onChangeToPrice = value => {\n    setToPrice(value);\n  };\n\n  console.log(fromCurrency);\n  console.log(toCurrency);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: css.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(Block, {\n      currency: fromCurrency,\n      onChangeCurrency: setFromCurrency\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BlockGet, {\n      currency: toCurrency,\n      onChangeCurrency: setToCurrency\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: css.exchange__rate__thumb,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: css.title,\n        children: \"\\u041A\\u0443\\u0440\\u0441 \\u043D\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0439 \\u043C\\u043E\\u043C\\u0435\\u043D\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: css.exchange__rate,\n        children: [/*#__PURE__*/_jsxDEV(ConvertFrom, {\n          value: fromPrice,\n          onChangeValue: onChangeFromPrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ConvertTo, {\n          value: toPrice,\n          onChangeValue: onChangeToPrice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CurrencyConverter, \"VBoWqA4qRYeZbcIVF9jJ8aneA4U=\");\n\n_c = CurrencyConverter;\nexport default CurrencyConverter;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyConverter\");","map":{"version":3,"sources":["C:/Users/user/Documents/GitHub/whiteEx/src/components/CurrencyConverter/CurrencyConverter.jsx"],"names":["css","useState","useEffect","Block","BlockGet","ConvertFrom","ConvertTo","CurrencyConverter","fromCurrency","setFromCurrency","toCurrency","setToCurrency","fromPrice","setFromPrice","toPrice","setToPrice","rates","setRates","fetch","then","r","json","data","console","log","catch","error","onChangeFromPrice","value","price","result","onChangeToPrice","wrapper","exchange__rate__thumb","title","exchange__rate"],"mappings":"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","sourcesContent":["import css from './CurrencyConverter.module.css';\nimport { useState, useEffect } from 'react';\n\nimport Block from '../Block';\nimport BlockGet from 'components/BlockGet';\nimport ConvertFrom from '../ConvertFrom';\nimport ConvertTo from 'components/ConvertTo';\n\n// До 1.000$ - 2, 5 %\n// Від 1.000$ до 5.000$ - 2%\n// Від 5.000$ до 10.000$ - 1,5%\n//   Від 10.000$ - 1 %\n\n// function Comission() {\n//   if (amount < 1000) {\n//    const comissionAmount = price * 0.025;\n//    const finalSum = sum + comissionAmount;\n//   } else if (amount) {\n//     price * 0.02;\n//   } else if (amount) {\n//     price * 0.015;\n//   } else {\n//     price * 0.01;\n//   }\n// }\n\n// function onBitcoinClickUSD(event) {\n//   event.preventDefault();\n//   fetch('https://api.binance.com/api/v3/avgPrice?symbol=BTCUSDT').then(r =>\n//     r.json().then(j => console.log(parseFloat(j.price).toFixed(2)))\n//   );\n// }\n\n// function onBitcoinClickEUR(event) {\n//   event.preventDefault();\n//   fetch('https://api.binance.com/api/v3/avgPrice?symbol=BTCEUR').then(r =>\n//     r.json().then(j => console.log(parseFloat(j.price).toFixed(2)))\n//   );\n// }\n// function onBitcoinClickPLN(event) {\n//   event.preventDefault();\n//   fetch('https://api.binance.com/api/v3/avgPrice?symbol=BTCPLN').then(r =>\n//     r.json().then(j => console.log(parseFloat(j.price).toFixed(2)))\n//   );\n// }\n// function onEthereumClickUSD(event) {\n//   event.preventDefault();\n//   fetch('https://api.binance.com/api/v3/avgPrice?symbol=ETHUSDT').then(r =>\n//     r.json().then(j => console.log(parseFloat(j.price).toFixed(2)))\n//   );\n// }\n\n// function onEthereumClickEUR(event) {\n//   event.preventDefault();\n//   fetch('https://api.binance.com/api/v3/avgPrice?symbol=ETHEUR').then(r =>\n//     r.json().then(j => console.log(parseFloat(j.price).toFixed(2)))\n//   );\n// }\n// function onEthereumClickPLN(event) {\n//   event.preventDefault();\n//   fetch('https://api.binance.com/api/v3/avgPrice?symbol=ETHPLN').then(r =>\n//     r.json().then(j => console.log(parseFloat(j.price).toFixed(2)))\n//   );\n// }\n\n// function onTRC20ClickUSD(event) {\n//   event.preventDefault();\n//   const data = fetch(\n//     'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=tether'\n//   ).then(r => r.json().then(data => console.log(data[0].current_price)));\n// }\n// function onTRC20ClickEUR(event) {\n//   event.preventDefault();\n//   const data = fetch(\n//     'https://api.coingecko.com/api/v3/coins/markets?vs_currency=eur&ids=tether'\n//   ).then(r => r.json().then(data => console.log(data[0].current_price)));\n// }\n// function onTRC20ClickPLN(event) {\n//   event.preventDefault();\n//   const data = fetch(\n//     'https://api.coingecko.com/api/v3/coins/markets?vs_currency=pln&ids=tether'\n//   ).then(r => r.json().then(data => console.log(data[0].current_price)));\n// }\n\n// function onERC20ClickUSD(event) {\n//   event.preventDefault();\n//   const data = fetch(\n//     'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=tether'\n//   ).then(r => r.json().then(data => console.log(data[0].current_price)));\n// }\n\n// function onGiveInputClick(event) {\n//   event.preventDefault();\n// }\n\nexport function CurrencyConverter() {\n  const [fromCurrency, setFromCurrency] = useState('Bitcoin');\n  const [toCurrency, setToCurrency] = useState('USD');\n  const [fromPrice, setFromPrice] = useState('');\n  const [toPrice, setToPrice] = useState('');\n  const [rates, setRates] = useState({});\n\n  useEffect(() => {\n    fetch(`https://api.coingecko.com/api/v3/exchange_rates`)\n      .then(r =>\n        r.json().then(data => {\n          // setRates(data[0].current_price);\n          console.log(data);\n        })\n      )\n      .catch(error => {\n        console.log('Error');\n      });\n  }, []);\n\n  const onChangeFromPrice = value => {\n    const price = value / rates[fromCurrency];\n    const result = price * rates[toCurrency];\n\n    setToPrice(result);\n    setFromPrice(value);\n  };\n\n  const onChangeToPrice = value => {\n    setToPrice(value);\n  };\n  console.log(fromCurrency);\n  console.log(toCurrency);\n  return (\n    <div className={css.wrapper}>\n      <Block currency={fromCurrency} onChangeCurrency={setFromCurrency} />\n      <BlockGet currency={toCurrency} onChangeCurrency={setToCurrency} />\n      <div className={css.exchange__rate__thumb}>\n        <div className={css.title}>Курс на данный момент</div>\n        <ul className={css.exchange__rate}>\n          <ConvertFrom value={fromPrice} onChangeValue={onChangeFromPrice} />\n          <ConvertTo value={toPrice} onChangeValue={onChangeToPrice} />\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default CurrencyConverter;\n"]},"metadata":{},"sourceType":"module"}